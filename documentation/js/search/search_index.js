var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.482,1,0.987]],["body/components/AboutComponent.html",[0,0.674,1,1.515,2,1.097,3,0.143,4,0.12,5,1.056,6,1.056,7,1.056,8,1.056,9,0.12,10,2.323,11,1.253,12,1.934,13,1.056,14,2.482,15,2.354,16,1.533,17,4.696,18,1.533,19,3.988,20,0.12,21,0.836,22,2.122,23,0.984,24,0.723,25,2.747,26,2.747,27,0.536,28,0.026,29,1.432,30,0.332,31,0.462,32,0.143,33,0.332,34,3.988,35,0.674,36,4.357,37,3.988,38,3.372,39,3.988,40,3.988,41,2.422,42,3.988,43,3.988,44,2.22,45,3.988,46,3.988,47,3.988,48,3.988,49,3.988,50,3.988,51,3.988,52,3.372,53,3.988,54,3.988,55,3.988,56,3.988,57,3.988,58,3.988,59,3.372,60,4.696,61,3.988,62,3.988,63,3.988,64,3.988,65,3.988,66,3.988,67,3.988,68,3.988,69,3.988,70,4.696,71,5.153,72,3.971,73,2.747,74,2.747,75,3.988,76,6.034,77,4.696,78,6.034,79,2.747,80,2.747,81,5.708,82,2.747,83,3.988,84,4.696,85,2.747,86,3.372,87,2.747,88,5.153,89,2.747,90,5.153,91,5.153,92,2.81,93,1.506,94,1.668,95,3.988,96,2.747,97,3.323,98,3.323,99,2.747,100,2.87,101,1.85,102,2.22,103,2.747,104,2.646,105,2.664,106,2.323,107,2.323,108,1.835,109,4.696,110,1.668,111,3.988,112,1.529,113,2.747,114,2.043,115,2.323,116,1.668,117,2.869,118,2.747,119,1.529,120,1.529,121,1.668,122,2.22,123,1.668,124,0.922,125,1.533,126,1.432,127,1.056,128,1.515,129,1.056,130,0.723,131,1.056,132,0.808,133,0.756,134,1.056,135,0.808,136,1.056,137,0.808,138,1.533,139,0.808,140,0.808,141,1.056,142,0.808,143,1.056,144,0.808,145,1.056,146,0.808,147,1.056,148,0.808,149,1.056,150,0.808,151,0.922,152,1.056,153,1.056,154,0.031,155,0.045,156,0.031]],["title/components/AddCourseComponent.html",[0,0.482,132,0.987]],["body/components/AddCourseComponent.html",[0,0.63,1,0.719,2,1.007,3,0.128,4,0.106,5,0.939,6,0.939,7,0.939,8,0.939,9,0.106,11,1.15,12,1.806,13,0.939,14,2.427,15,2.268,16,1.406,18,1.406,20,0.106,21,0.767,22,2.005,23,0.767,24,1.029,27,0.714,28,0.026,29,1.575,30,0.63,31,0.411,32,0.128,33,0.295,35,0.907,92,1.879,94,2.222,97,2.222,98,2.222,100,2.699,101,1.749,102,2.037,104,1.879,110,1.484,112,2.442,116,1.484,117,2.037,119,2.442,120,2.442,121,1.484,124,0.821,125,1.871,126,1.314,127,0.939,128,1.432,129,0.939,130,1.058,131,0.939,132,1.432,133,1.769,134,0.939,135,0.719,136,0.939,137,0.719,138,1.406,139,0.719,140,0.719,141,0.939,142,0.719,143,0.939,144,0.719,145,0.939,146,0.719,147,0.939,148,0.719,149,0.939,150,0.719,151,0.821,152,0.939,153,0.939,154,0.028,155,0.041,156,0.028,157,4.934,158,4.341,159,2.067,160,4.386,161,3.66,162,0.664,163,4.386,164,2.93,165,3.263,166,3.623,167,2.222,168,2.93,169,1.633,170,3.656,171,2.337,172,3.623,173,2.93,174,3.66,175,0.629,176,0.223,177,0.629,178,2.444,179,2.444,180,3.656,181,2.444,182,2.722,183,3.66,184,1.741,185,3.66,186,2.037,187,3.094,188,3.66,189,2.222,190,2.42,191,3.66,192,3.66,193,2.444,194,3.66,195,3.66,196,2.93,197,2.444,198,1.879,199,1.406,200,2.153,201,2.444,202,1.633,203,2.444,204,1.53,205,2.444,206,0.768,207,1.633,208,1.361,209,1.361,210,1.08,211,2.067,212,2.067,213,1.129,214,2.444,215,2.444,216,1.818,217,2.444,218,3.446,219,2.444,220,2.444,221,1.818,222,1.618,223,2.444,224,1.818,225,2.444,226,2.444,227,1.633,228,1.163,229,0.878,230,1.633,231,2.444,232,1.818,233,2.444,234,2.067,235,3.483,236,3.094,237,3.709,238,2.442,239,2.444,240,2.664,241,1.163,242,1.633,243,1.818,244,2.444,245,2.222,246,1.633,247,1.633,248,1.484,249,2.067,250,2.067,251,2.222,252,2.037,253,1.818,254,2.067,255,1.818,256,2.067]],["title/injectables/AddCourseService.html",[173,2.243,257,0.808]],["body/injectables/AddCourseService.html",[3,0.211,4,0.176,9,0.176,20,0.176,21,1.088,23,1.088,24,0.942,27,0.787,28,0.026,30,0.757,31,0.679,32,0.211,33,0.487,35,0.937,93,1.11,128,1.186,130,0.942,154,0.045,155,0.058,156,0.045,172,3.862,173,3.467,175,1.336,176,0.351,177,1.336,193,3.467,204,1.631,213,1.038,229,1.864,257,1.249,258,1.919,259,3.834,260,2.695,261,1.783,262,2.061,263,3.411,264,1.449,265,4.034,266,4.034,267,1.864,268,4.39,269,3.112,270,2.679,271,5.191,272,3.152,273,2.495,274,1.927,275,1.449,276,3.152,277,2.061,278,1.743,279,3.411,280,1.355,281,1.355,282,3.001,283,1.268,284,1.55,285,1.743,286,3.001,287,3.001,288,1.449,289,1.186,290,1.449,291,1.661,292,1.449,293,2.45,294,1.661,295,4.034,296,4.034,297,4.034]],["title/injectables/AddToCourseService.html",[257,0.808,298,2.243]],["body/injectables/AddToCourseService.html",[3,0.2,4,0.167,9,0.167,20,0.167,21,1.051,23,1.051,24,0.91,27,0.747,28,0.026,30,0.764,31,0.644,32,0.2,33,0.462,35,0.95,93,1.054,128,1.126,130,0.91,154,0.043,155,0.057,156,0.043,175,1.291,176,0.342,177,1.291,184,2.387,193,3.352,204,1.203,213,0.985,229,1.375,257,1.207,258,1.821,259,3.739,260,2.558,261,1.693,262,2.01,263,3.238,264,1.375,274,1.286,275,1.375,276,3.607,277,2.01,278,1.685,279,3.238,280,1.286,281,1.286,282,3.733,283,1.203,284,1.471,285,1.685,288,1.375,289,1.126,290,1.375,291,1.577,292,1.375,293,2.325,294,2.305,298,3.352,299,5.023,300,3.829,301,1.078,302,2.539,303,1.685,304,2.626,305,3.829,306,4.243,307,5.018,308,3.047,309,1.747,310,2.826,311,5.018,312,2.577,313,2.794,314,3.047,315,2.558,316,3.829,317,3.829,318,3.829,319,2.848]],["title/components/AppComponent.html",[0,0.482,135,0.987]],["body/components/AppComponent.html",[0,0.835,1,1.219,2,1.453,3,0.216,4,0.18,5,1.593,6,1.593,7,1.593,8,1.593,9,0.18,13,1.593,14,2.643,15,2.47,16,2.03,18,2.03,20,0.18,24,0.752,28,0.026,30,0.5,31,0.697,32,0.216,33,0.5,35,0.595,41,3.208,101,1.489,124,1.392,125,2.03,126,1.897,127,1.593,128,1.8,129,1.593,130,0.958,131,1.593,132,1.219,133,1.141,134,1.593,135,1.8,136,1.593,137,1.219,138,2.03,139,1.219,140,1.219,141,1.593,142,1.219,143,1.593,144,1.219,145,1.593,146,1.219,147,1.593,148,1.219,149,1.593,150,1.219,151,1.392,152,1.593,153,1.593,154,0.047,155,0.06,156,0.047,162,0.958,176,0.253,198,2.129,199,1.593,292,1.897,301,0.752,320,3.505,321,5.814,322,5.282,323,4.916,324,4.145]],["title/modules/AppModule.html",[325,2.498,326,2.243]],["body/modules/AppModule.html",[0,0.884,1,1.771,3,0.155,4,0.129,9,0.129,28,0.026,30,0.824,31,0.499,32,0.155,33,0.358,35,0.425,101,1.064,124,0.995,132,1.722,133,0.815,135,1.908,137,1.722,139,1.722,140,1.771,142,1.771,144,1.722,146,1.771,148,1.722,150,1.722,154,0.033,155,0.047,156,0.033,158,2.204,206,0.931,208,1.65,210,1.31,222,1.31,280,0.995,325,2.204,326,4.655,327,2.204,328,1.979,329,4.143,330,3.969,331,4.143,332,2.505,333,2.505,334,2.505,335,2.505,336,2.505,337,2.681,338,2.166,339,3.007,340,3.561,341,2.505,342,1.22,343,2.963,344,4.211,345,3.561,346,1.979,347,4.211,348,2.963,349,2.963,350,2.963,351,2.204,352,2.963,353,2.963,354,4.211,355,2.963,356,2.963,357,2.204,358,2.963,359,2.963,360,2.204,361,2.963,362,2.963,363,2.963,364,4.211,365,2.204,366,2.505,367,3.561,368,2.505,369,4.211,370,2.963,371,2.963,372,2.204,373,2.963,374,2.963,375,2.963,376,2.963,377,2.963,378,4.184,379,2.963,380,2.963,381,2.963,382,2.963,383,2.963,384,2.963,385,2.963,386,2.963,387,2.963,388,1.064,389,1.979,390,1.799,391,2.963,392,1.521,393,2.505,394,2.963,395,2.963,396,2.963]],["title/classes/AppPage.html",[33,0.405,397,2.498]],["body/classes/AppPage.html",[3,0.253,4,0.211,9,0.211,20,0.211,21,1.218,24,1.055,27,1.134,28,0.026,30,0.584,32,0.253,33,0.584,93,1.332,126,1.738,154,0.055,155,0.066,156,0.055,204,1.827,292,1.738,346,3.233,397,4.325,398,3.6,399,4.093,400,6.464,401,6.464,402,4.84,403,6.714,404,4.84,405,4.093,406,4.84,407,4.84,408,4.84]],["title/guards/AuthGuard.html",[392,1.724,409,2.498]],["body/guards/AuthGuard.html",[2,0.623,3,0.118,4,0.099,9,0.099,11,1.086,20,0.099,21,0.724,23,0.724,24,0.627,27,1.079,28,0.027,30,0.759,31,0.381,32,0.219,33,0.506,93,0.623,122,1.261,130,0.411,133,0.951,154,0.039,155,0.039,156,0.026,171,2.277,175,0.583,176,0.211,177,0.583,186,1.261,190,2.23,199,1.801,200,1.002,204,2.036,206,0.712,210,1.002,213,1.299,222,1.002,228,1.078,229,1.241,241,1.078,257,1.127,262,1.241,264,0.814,267,0.814,269,1.163,270,2.071,272,2.098,273,0.933,274,0.761,277,1.241,278,1.16,280,1.16,281,0.761,283,0.712,284,0.871,285,2.001,288,1.241,289,0.666,290,0.814,291,0.933,292,0.814,294,1.423,301,0.85,303,1.16,304,1.002,309,1.016,312,1.774,337,1.078,338,1.801,342,1.725,388,1.986,390,2.098,392,1.774,410,2.266,411,1.261,412,3.551,413,2.266,414,1.992,415,2.266,416,2.308,417,2.308,418,2.798,419,1.924,420,2.308,421,2.266,422,1.504,423,2.308,424,2.928,425,2.308,426,2.897,427,2.308,428,2.308,429,2.308,430,2.308,431,2.308,432,2.308,433,2.098,434,2.308,435,1.513,436,1.078,437,1.924,438,1.163,439,2.308,440,2.798,441,2.308,442,2.308,443,1.513,444,1.513,445,2.798,446,1.513,447,1.513,448,3.064,449,2.098,450,2.098,451,1.261,452,1.376,453,1.261,454,1.376,455,0.299,456,1.261,457,1.513,458,1.163,459,1.513,460,2.308,461,1.376,462,1.153,463,1.513,464,1.513,465,1.513,466,1.513,467,1.513,468,2.308,469,1.513,470,1.163,471,2.308,472,1.513,473,1.513,474,1.513,475,2.798,476,2.544,477,1.513,478,1.513,479,1.513,480,2.308,481,1.513,482,1.513,483,1.513,484,1.513,485,1.513,486,1.513,487,1.513,488,2.308,489,1.513,490,1.513,491,1.513,492,1.513,493,1.513,494,1.513,495,1.513,496,1.513,497,1.513,498,1.376,499,1.513,500,1.513,501,1.513,502,1.513,503,1.513,504,2.308,505,1.513,506,1.376,507,1.513,508,1.513,509,2.308,510,2.308,511,2.308,512,1.513,513,1.513,514,1.513,515,1.513,516,1.513,517,1.163,518,1.261,519,1.163,520,1.513,521,1.513,522,1.513,523,1.513,524,1.513,525,1.513,526,1.513,527,1.513,528,1.513,529,1.513,530,1.261,531,2.098,532,1.513,533,1.513,534,1.513,535,1.513,536,1.261,537,1.163,538,1.513,539,1.513,540,1.513,541,1.513,542,1.513,543,1.513,544,1.513,545,1.513,546,1.163,547,1.513,548,1.513,549,1.078,550,1.513,551,1.261,552,1.376,553,1.376]],["title/interceptors/AuthInterceptor.html",[337,1.597,554,2.839]],["body/interceptors/AuthInterceptor.html",[2,0.64,3,0.121,4,0.101,9,0.101,11,1.108,20,0.101,21,0.739,23,0.487,24,0.422,27,1.089,28,0.027,30,0.763,31,0.391,32,0.222,33,0.514,93,0.64,122,1.295,130,0.422,133,1.171,154,0.04,155,0.04,156,0.026,171,1.753,175,0.599,176,0.215,177,0.599,186,1.295,190,1.882,199,1.636,200,1.028,204,2.045,206,0.731,210,1.028,213,1.314,222,1.028,228,1.106,229,1.266,241,1.106,257,1.143,262,1.266,264,0.835,267,0.835,269,1.194,270,2.374,272,2.14,273,0.958,274,0.781,277,1.528,278,1.184,280,1.184,281,0.781,283,0.731,284,0.894,285,2.015,288,1.266,289,0.684,290,0.835,291,0.958,292,0.835,294,1.451,301,0.862,303,1.184,304,1.028,309,1.036,312,1.194,337,1.677,338,1.355,342,1.451,388,1.929,392,1.194,411,1.295,412,2.843,414,1.106,416,1.553,417,1.553,418,2.354,419,1.295,420,1.553,422,0.835,423,1.553,424,2.621,425,1.553,426,2.893,427,1.553,428,1.553,429,1.553,430,1.553,431,1.553,432,1.553,433,1.412,434,1.553,435,1.553,436,1.106,437,1.962,438,1.194,439,2.354,440,3.172,441,3.172,442,3.172,443,1.553,444,1.553,445,2.843,446,1.553,447,1.553,448,3.099,449,2.14,450,2.14,451,1.295,452,1.412,453,1.295,454,1.412,455,0.307,456,1.295,457,1.553,458,1.194,459,1.553,460,2.354,461,1.412,462,1.171,463,1.553,464,1.553,465,1.553,466,1.553,467,1.553,468,2.354,469,1.553,470,1.194,471,2.354,472,1.553,473,1.553,474,1.553,475,2.843,476,2.585,477,1.553,478,1.553,479,1.553,480,2.354,481,1.553,482,1.553,483,1.553,484,1.553,485,1.553,486,1.553,487,1.553,488,2.354,489,1.553,490,1.553,491,1.553,492,1.553,493,1.553,494,1.553,495,1.553,496,1.553,497,1.553,498,1.412,499,1.553,500,1.553,501,1.553,502,1.553,503,1.553,504,2.354,505,1.553,506,1.412,507,1.553,508,1.553,509,2.354,510,2.354,511,2.354,512,1.553,513,1.553,514,1.553,515,1.553,516,1.553,517,1.194,518,1.295,519,1.194,520,1.553,521,1.553,522,1.553,523,1.553,524,1.553,525,1.553,526,1.553,527,1.553,528,1.553,529,1.553,530,1.962,531,2.884,532,2.354,533,2.354,534,2.354,535,2.843,536,1.295,537,1.194,538,1.553,539,1.553,540,1.553,541,1.553,542,1.553,543,1.553,544,1.553,545,1.553,546,1.194,547,1.553,548,1.553,549,1.106,550,1.553,551,1.295,552,1.412,553,1.412,555,2.326,556,3.525,557,2.326,558,2.326]],["title/injectables/AuthenticationService.html",[257,0.808,338,1.29]],["body/injectables/AuthenticationService.html",[2,0.57,3,0.108,4,0.09,9,0.09,11,1.014,20,0.09,21,0.676,23,0.676,24,1.055,27,1.227,28,0.027,29,0.744,30,0.745,31,0.349,32,0.207,33,0.478,93,0.57,122,1.154,130,0.811,133,0.888,154,0.045,155,0.036,156,0.023,162,0.585,167,1.959,171,1.631,175,1.15,176,0.273,177,1.15,186,1.154,190,1.976,199,1.718,200,0.916,204,2.007,206,0.651,210,0.916,213,1.464,222,0.916,228,0.986,229,1.605,241,0.986,257,1.075,258,0.986,261,0.916,262,1.605,264,1.158,267,0.744,269,1.656,270,1.976,272,2.405,273,1.328,274,0.696,275,1.158,277,1.158,278,1.083,280,1.083,281,0.696,283,0.651,284,0.796,285,1.953,288,1.158,289,0.609,290,0.744,291,0.853,292,0.744,294,1.328,301,0.971,303,1.083,304,0.916,309,1.165,312,1.064,337,0.986,338,1.522,342,1.631,388,2.127,392,1.064,411,1.154,412,2.645,414,0.986,416,1.384,417,1.384,418,2.154,419,1.154,420,1.384,422,1.158,423,1.384,424,2.75,425,1.384,426,2.934,427,1.384,428,1.384,429,1.384,430,1.384,431,1.384,432,1.384,433,1.258,434,1.384,435,1.384,436,0.986,437,1.796,438,1.064,439,2.154,440,2.645,441,2.154,442,2.154,443,1.384,444,1.384,445,2.645,446,1.384,447,1.384,448,3.115,449,2.714,450,1.959,451,1.154,452,1.258,453,1.154,454,1.258,455,0.273,456,1.154,457,1.384,458,1.064,459,1.384,460,2.645,461,1.959,462,1.411,463,2.154,464,2.154,465,2.645,466,2.154,467,1.384,468,2.154,469,1.384,470,1.064,471,2.154,472,1.384,473,1.384,474,1.384,475,2.986,476,2.714,477,1.384,478,1.384,479,1.384,480,2.154,481,1.384,482,1.384,483,1.384,484,1.384,485,1.384,486,1.384,487,1.384,488,2.154,489,2.154,490,1.384,491,1.384,492,1.384,493,1.384,494,1.384,495,1.384,496,1.384,497,1.384,498,1.959,499,2.154,500,2.986,501,1.384,502,1.384,503,1.384,504,2.154,505,1.384,506,1.258,507,1.384,508,1.384,509,2.154,510,2.154,511,2.154,512,2.986,513,1.384,514,1.384,515,1.384,516,1.384,517,1.656,518,1.796,519,1.656,520,2.986,521,2.154,522,1.384,523,1.384,524,1.384,525,1.384,526,2.986,527,1.384,528,2.986,529,1.384,530,1.154,531,1.959,532,1.384,533,1.384,534,1.384,535,1.384,536,1.154,537,1.064,538,1.384,539,1.384,540,1.384,541,1.384,542,1.384,543,1.384,544,1.384,545,1.384,546,1.064,547,1.384,548,1.384,549,0.986,550,1.384,551,1.154,552,1.258,553,1.258,559,3.226,560,2.072,561,2.072,562,2.072,563,2.072,564,2.072,565,2.072,566,2.072,567,2.072,568,2.072,569,2.072]],["title/interfaces/Course.html",[35,0.482,455,0.443]],["body/interfaces/Course.html",[3,0.259,4,0.216,9,0.216,20,0.216,28,0.025,32,0.259,35,0.956,38,4.199,102,2.765,130,1.208,154,0.056,155,0.067,156,0.056,162,1.071,176,0.361,218,4.043,273,2.045,275,1.783,301,1.225,455,0.655,570,1.783,571,4.199,572,4.966]],["title/components/CourseHomeComponent.html",[0,0.482,137,0.987]],["body/components/CourseHomeComponent.html",[0,0.448,1,0.429,2,0.668,3,0.076,4,0.063,5,0.56,6,0.56,7,0.56,8,0.56,9,0.063,11,0.763,12,1.286,13,0.56,14,2.14,15,1.999,16,0.933,18,0.933,20,0.063,21,0.509,22,1.5,23,0.509,24,1.08,27,0.79,28,0.026,29,1.569,30,0.645,31,0.245,32,0.076,33,0.176,35,0.813,44,2.028,86,1.232,92,1.603,94,0.885,97,1.896,98,1.896,100,2.734,101,1.453,102,1.352,104,2.078,105,0.974,112,2.028,114,1.084,117,1.738,119,1.738,120,1.738,123,1.475,124,0.489,125,1.679,126,0.872,127,0.56,128,1.071,129,0.56,130,0.566,131,0.56,132,0.429,133,1.603,134,0.56,135,0.429,136,0.56,137,1.071,138,0.933,139,0.429,140,0.429,141,0.56,142,0.429,143,0.56,144,0.429,145,0.56,146,0.429,147,0.56,148,0.429,149,0.56,150,0.429,151,0.489,152,0.56,153,0.56,154,0.016,155,0.027,156,0.016,162,0.441,164,3.782,167,1.475,168,2.085,169,0.974,170,2.919,171,1.666,175,0.375,176,0.191,177,0.375,180,2.085,181,2.433,182,2.709,184,1.732,189,1.475,190,1.074,193,1.622,196,1.622,198,2.244,199,1.679,200,2.048,202,0.974,204,1.271,205,1.622,206,0.763,207,0.974,208,0.811,209,1.738,210,0.644,211,1.232,212,1.232,213,1.125,217,1.622,227,0.974,228,1.732,230,0.974,235,1.622,238,1.352,240,0.885,241,0.693,242,0.974,244,0.974,245,0.885,246,0.974,248,1.475,251,1.475,252,0.811,255,1.084,267,1.743,270,1.074,277,0.523,281,0.489,298,2.085,299,3.08,302,1,306,3.08,309,1.482,310,2.803,313,1.352,314,3.617,323,1.232,360,4.474,367,1.232,368,1.232,378,1.622,393,2.054,470,1.247,549,2.309,573,5.085,574,1.232,575,2.64,576,2.054,577,2.429,578,2.429,579,3.421,580,4.046,581,2.429,582,2.429,583,2.87,584,4.708,585,2.429,586,2.429,587,4.37,588,3.642,589,3.642,590,4.37,591,3.095,592,1.738,593,2.814,594,2.429,595,1.458,596,3.642,597,2.429,598,2.709,599,5.663,600,2.709,601,1.807,602,3.642,603,2.429,604,1.458,605,2.433,606,3.642,607,3.642,608,1.458,609,1.87,610,1.807,611,2.709,612,2.054,613,1.807,614,2.429,615,3.242,616,1.458,617,2.709,618,5.085,619,3.642,620,2.054,621,2.054,622,1.458,623,2.429,624,2.429,625,2.429,626,2.429,627,1.458,628,1.458,629,1.458,630,1.475,631,1.458,632,1.458,633,1.458,634,2.429,635,2.429,636,2.429,637,2.429,638,1.458,639,4.37,640,1.807,641,2.429,642,1.458,643,2.429,644,3.642,645,1.458,646,2.429,647,1.458,648,1.458,649,2.429,650,1.084,651,1.232,652,1.232,653,1.458,654,1.458,655,1.458,656,1.458,657,1.458,658,1.458,659,1.458,660,1.458,661,1.084,662,1.458,663,1.458,664,1.232,665,1.232,666,1.232,667,1.458,668,1.458,669,1.458,670,1.458,671,1.458,672,1.458,673,1.232,674,1.232,675,1.458,676,1.458,677,2.429,678,2.429,679,1.458,680,1.458,681,1.458,682,1.458,683,2.429,684,2.429,685,1.807,686,1.458,687,2.429,688,1.458,689,1.458,690,1.458,691,1.458,692,2.429,693,2.429,694,1.458,695,1.458,696,2.054,697,2.429,698,1.458,699,2.429,700,1.458,701,1.458,702,1.458,703,3.08,704,4.708,705,3.695,706,2.429,707,2.429,708,2.429,709,5.663,710,5.663,711,2.429,712,2.429,713,1.896,714,3.25,715,1.458,716,1.458,717,1.458,718,1.458,719,1.458,720,1.458,721,1.458,722,1.232,723,2.054,724,1.232,725,1.232,726,1.458,727,1.232]],["title/interfaces/CourseStatus.html",[315,2.243,455,0.443]],["body/interfaces/CourseStatus.html",[3,0.264,4,0.22,9,0.22,20,0.22,28,0.025,30,0.611,32,0.264,35,0.983,154,0.057,155,0.067,156,0.057,162,1.083,176,0.365,301,1.083,304,2.807,315,3.987,455,0.668,570,1.817,728,4.279,729,4.279,730,5.061,731,5.061]],["title/components/HomeComponent.html",[0,0.482,139,0.987]],["body/components/HomeComponent.html",[0,0.782,1,0.797,2,1.087,3,0.141,4,0.118,5,1.042,6,1.042,7,1.042,8,1.042,9,0.118,11,1.241,12,1.919,13,1.042,14,2.476,15,2.314,16,1.518,18,1.518,20,0.118,21,0.828,22,2.109,23,0.828,24,0.988,27,0.771,28,0.026,29,1.674,30,0.618,31,0.456,32,0.141,33,0.327,35,0.88,92,1.392,93,0.746,100,2.217,101,1.955,104,2.029,105,1.811,106,2.293,107,2.293,108,1.811,112,2.2,115,2.293,116,2.399,121,2.83,124,0.911,125,1.518,126,1.419,127,1.042,128,1.506,129,1.042,130,0.845,131,1.042,132,0.797,133,1.614,134,1.042,135,0.797,136,1.042,137,0.797,138,1.518,139,1.506,140,0.797,141,1.042,142,0.797,143,1.042,144,0.797,145,1.042,146,0.797,147,1.042,148,0.797,149,1.042,150,0.797,151,1.565,152,1.042,153,1.042,154,0.031,155,0.045,156,0.031,162,0.845,171,2.416,172,4.05,175,0.698,176,0.166,177,0.698,184,1.879,189,2.399,206,0.852,213,1.2,229,0.974,230,1.811,234,2.293,238,2.2,239,1.811,240,2.399,245,3.306,248,1.647,251,1.647,252,1.51,267,1.419,273,1.117,289,1.162,310,1.879,313,2.2,338,2.254,372,2.017,462,1.409,575,3.941,576,3.341,592,2.851,598,2.939,605,3.164,609,2.029,612,3.341,630,2.399,640,3.81,650,2.017,713,1.647,725,2.293,732,2.293,733,3.918,734,2.59,735,2.711,736,3.951,737,2.711,738,3.951,739,3.951,740,3.951,741,2.711,742,2.711,743,2.2,744,3.951,745,3.951,746,3.951,747,3.951,748,2.711,749,2.711,750,2.293,751,2.293,752,2.293,753,2.711,754,3.951,755,3.951,756,2.2,757,5.683,758,2.711,759,2.711,760,2.711,761,2.711,762,2.711,763,2.293,764,2.711,765,2.711,766,2.711,767,2.711,768,2.711,769,2.711,770,2.711,771,2.711,772,2.711,773,2.711,774,2.711,775,2.711,776,3.341,777,2.711,778,2.293,779,2.711,780,2.711,781,2.293,782,2.711,783,2.711,784,2.711,785,2.711]],["title/interfaces/JWTPayload.html",[455,0.443,456,1.869]],["body/interfaces/JWTPayload.html",[2,0.641,3,0.122,4,0.101,9,0.101,11,1.109,20,0.101,23,0.488,27,0.997,28,0.027,30,0.763,31,0.392,32,0.222,33,0.515,93,0.641,122,1.298,133,0.971,154,0.04,155,0.04,156,0.026,162,0.64,171,1.755,176,0.312,186,1.298,190,1.884,199,1.638,200,1.03,204,2.046,206,0.732,210,1.03,213,1.315,222,1.03,228,1.109,229,1.268,241,1.109,257,1.144,262,1.268,264,0.837,267,0.837,269,1.197,270,2.102,272,2.144,273,0.96,274,0.783,277,1.268,278,1.186,280,1.186,281,0.783,283,0.732,284,0.896,285,2.016,288,1.268,289,0.685,290,0.837,291,0.96,292,0.837,294,1.454,301,1.043,303,1.805,304,1.03,309,1.502,312,1.197,337,1.109,338,1.357,342,1.454,388,1.93,392,1.197,411,1.298,412,2.847,414,1.109,416,1.557,417,1.557,418,2.358,419,1.298,420,1.557,422,0.837,423,1.557,424,2.623,425,1.557,426,2.894,427,1.557,428,1.557,429,1.557,430,1.557,431,1.557,432,1.557,433,1.415,434,1.557,435,1.557,436,1.109,437,1.966,438,1.197,439,2.358,440,2.847,441,2.358,442,2.358,443,1.557,444,1.557,445,2.847,446,1.557,447,1.557,448,3.102,449,2.144,450,2.144,451,1.298,452,1.415,453,1.298,454,1.415,455,0.307,456,1.966,457,3.176,458,2.442,459,3.176,460,2.358,461,1.415,462,1.173,463,1.557,464,1.557,465,1.557,466,1.557,467,1.557,468,2.358,469,1.557,470,1.197,471,2.358,472,1.557,473,1.557,474,1.557,475,2.847,476,2.588,477,1.557,478,1.557,479,1.557,480,2.358,481,1.557,482,1.557,483,1.557,484,1.557,485,1.557,486,1.557,487,1.557,488,2.358,489,1.557,490,1.557,491,1.557,492,1.557,493,1.557,494,1.557,495,1.557,496,1.557,497,1.557,498,1.415,499,1.557,500,1.557,501,1.557,502,1.557,503,1.557,504,2.358,505,1.557,506,1.415,507,1.557,508,1.557,509,2.358,510,2.358,511,2.358,512,1.557,513,1.557,514,1.557,515,1.557,516,1.557,517,1.197,518,1.298,519,1.197,520,1.557,521,1.557,522,1.557,523,1.557,524,1.557,525,1.557,526,1.557,527,1.557,528,1.557,529,1.557,530,1.298,531,2.144,532,1.557,533,1.557,534,1.557,535,1.557,536,1.298,537,1.197,538,1.557,539,1.557,540,1.557,541,1.557,542,1.557,543,1.557,544,1.557,545,1.557,546,1.197,547,1.557,548,1.557,549,1.109,550,1.557,551,1.298,552,1.415,553,1.415,570,0.837]],["title/interfaces/Login.html",[388,1.206,455,0.443]],["body/interfaces/Login.html",[3,0.265,4,0.221,9,0.221,20,0.221,28,0.025,32,0.265,154,0.057,155,0.067,156,0.057,162,1.086,176,0.366,301,1.232,309,1.932,388,2.15,455,0.671,570,1.826,786,4.3,787,3.989]],["title/components/LoginComponent.html",[0,0.482,140,0.987]],["body/components/LoginComponent.html",[0,0.573,1,0.616,2,0.895,3,0.109,4,0.091,5,0.805,6,0.805,7,0.805,8,0.805,9,0.091,11,1.022,12,1.642,13,0.805,14,2.349,15,2.195,16,1.25,18,1.25,20,0.091,21,0.682,22,1.851,23,0.682,24,1.008,27,0.635,28,0.026,29,1.168,30,0.649,31,0.352,32,0.109,33,0.253,35,0.573,72,1.771,92,1.67,94,1.272,97,1.975,98,1.975,100,2.775,101,1.85,104,2.309,105,1.399,108,1.399,110,1.272,112,2.22,114,1.558,117,1.811,119,2.503,120,2.503,121,1.272,123,1.975,124,0.703,125,1.25,126,1.168,127,0.805,128,1.322,129,0.805,130,0.723,131,0.805,132,0.616,133,0.576,134,0.805,135,0.616,136,0.805,137,0.616,138,1.25,139,0.616,140,1.322,141,0.805,142,0.616,143,0.805,144,0.616,145,0.805,146,0.616,147,0.805,148,0.616,149,0.805,150,0.616,151,0.703,152,0.805,153,0.805,154,0.024,155,0.051,156,0.024,162,0.59,164,3.252,165,3.622,166,3.345,167,1.975,168,2.664,169,1.399,170,3.442,171,2.214,175,0.837,176,0.244,177,0.539,180,3.713,181,3.252,187,2.751,189,2.422,190,1.988,196,2.664,198,2.048,199,1.25,200,2.152,202,1.399,204,1.53,205,2.173,206,0.658,207,1.399,208,1.166,209,1.166,210,0.926,213,1.253,216,1.558,217,2.173,221,1.558,222,1.438,224,2.42,227,1.399,228,1.547,229,1.931,232,1.558,235,3.252,238,2.22,239,2.173,240,2.422,241,0.996,242,1.399,243,1.558,245,2.73,246,2.173,247,1.399,248,1.272,251,1.975,252,2.22,267,1.85,285,0.703,301,0.59,309,1.432,338,2.066,372,1.558,388,2.263,419,1.166,424,1.076,462,1.097,498,1.975,517,1.076,518,1.811,537,2.048,549,2.139,551,2.22,553,1.272,591,3.003,592,2.22,600,2.42,601,2.42,609,2.309,617,2.42,630,1.975,650,1.558,685,2.42,696,1.771,713,1.975,714,1.558,722,1.771,724,3.372,734,1.547,763,1.771,776,2.751,778,1.771,787,2.956,788,1.771,789,3.988,790,3.253,791,3.988,792,3.988,793,4.496,794,4.496,795,3.253,796,2.095,797,2.095,798,2.751,799,2.751,800,3.988,801,3.253,802,3.253,803,3.253,804,1.975,805,1.975,806,2.751,807,2.095,808,3.802,809,3.253,810,2.095,811,2.42,812,2.095,813,2.095,814,1.771,815,2.095,816,1.771,817,2.095,818,2.095,819,1.771,820,2.095,821,2.095,822,2.095,823,1.771,824,1.771,825,1.771,826,1.771,827,2.095,828,2.095,829,2.095,830,2.095,831,2.095,832,1.771,833,2.095,834,2.095,835,2.095,836,2.095,837,2.095,838,2.095,839,2.095,840,3.253,841,3.253,842,3.253,843,1.771,844,2.095,845,2.095,846,2.095,847,2.095,848,2.095,849,2.095,850,2.095]],["title/components/LogoutComponent.html",[0,0.482,142,0.987]],["body/components/LogoutComponent.html",[0,0.789,1,1.085,2,1.347,3,0.192,4,0.161,5,1.417,6,1.417,7,1.417,8,1.417,9,0.161,11,1.538,12,2.263,13,1.417,14,2.602,15,2.431,16,1.881,18,1.881,20,0.161,21,1.026,22,2.41,23,1.026,24,0.888,27,0.72,28,0.026,29,1.758,30,0.663,31,0.621,32,0.192,33,0.445,35,0.53,101,1.324,124,1.239,125,1.881,126,1.758,127,1.417,128,1.721,129,1.417,130,0.997,131,1.417,132,1.085,133,1.015,134,1.417,135,1.085,136,1.417,137,1.085,138,1.881,139,1.085,140,1.085,141,1.417,142,1.721,143,1.417,144,1.085,145,1.417,146,1.085,147,1.417,148,1.085,149,1.417,150,1.085,151,1.239,152,1.417,153,1.417,154,0.042,155,0.055,156,0.042,171,2.41,175,0.949,176,0.225,177,0.949,190,2.164,206,1.159,213,1.26,342,2.016,388,1.758,390,3.699,414,2.329,552,2.24,665,3.119,804,2.973,805,2.973,851,3.119,852,5.495,853,4.896,854,3.689,855,3.689,856,3.689,857,4.896,858,3.642,859,4.896,860,4.14,861,3.689,862,3.689,863,3.119,864,4.896]],["title/injectables/LogoutService.html",[257,0.808,414,1.597]],["body/injectables/LogoutService.html",[3,0.227,4,0.189,9,0.189,20,0.189,21,1.14,23,1.14,24,0.987,27,0.847,28,0.026,29,1.559,30,0.752,31,0.73,32,0.227,33,0.524,93,1.195,130,0.788,154,0.049,155,0.061,156,0.049,175,1.117,176,0.332,177,1.117,213,1.117,257,1.308,258,2.065,261,1.919,262,2.235,264,1.953,267,1.953,274,1.458,277,1.559,278,1.826,280,1.458,281,1.458,283,1.364,284,1.668,285,1.826,288,1.559,289,1.277,290,1.559,291,1.788,292,1.559,342,2.24,390,3.78,414,2.587,433,3.303,804,3.303,805,3.303,858,4.046,865,3.23,866,4.342,867,4.342,868,3.23,869,3.671,870,4.342,871,4.342,872,4.342,873,4.342]],["title/interfaces/Message.html",[455,0.443,583,1.484]],["body/interfaces/Message.html",[3,0.223,4,0.186,9,0.186,20,0.186,28,0.026,32,0.223,35,0.847,154,0.048,155,0.061,156,0.048,162,0.978,176,0.42,301,1.214,302,2.43,303,2.188,310,2.564,314,3.273,422,2.224,455,0.565,570,1.537,583,2.924,615,3.941,630,3.761,734,2.807,874,3.619,875,5.9,876,5.9,877,5.9,878,3.001,879,3.6,880,5.39,881,4.28,882,4.28,883,4.28,884,4.28,885,4.28,886,4.28,887,4.28,888,4.28,889,4.28,890,3.619]],["title/interfaces/MessageSent.html",[455,0.443,891,2.243]],["body/interfaces/MessageSent.html",[3,0.26,4,0.217,9,0.217,20,0.217,28,0.025,32,0.26,93,1.369,117,2.771,154,0.056,155,0.067,156,0.056,162,1.072,176,0.361,275,1.787,301,1.072,422,2.123,455,0.78,570,1.787,583,2.788,673,5.332,674,5.332,703,4.209,704,4.209,705,4.209,743,2.771,891,3.948,892,4.209,893,4.977,894,4.977]],["title/injectables/MessageService.html",[257,0.808,593,2.039]],["body/injectables/MessageService.html",[3,0.163,4,0.136,9,0.136,20,0.136,21,0.915,23,0.915,24,0.99,27,0.983,28,0.026,30,0.738,31,0.525,32,0.163,33,0.377,35,0.784,93,0.859,128,0.918,130,0.99,151,1.467,154,0.035,155,0.049,156,0.035,175,1.405,176,0.351,177,1.405,184,2.597,204,1.871,213,0.803,229,1.121,230,2.084,257,1.051,258,1.484,261,1.379,262,1.81,264,1.121,268,4.617,269,2.803,270,2.758,273,2.248,274,1.048,275,1.81,276,2.653,277,1.96,278,1.467,280,1.048,281,1.048,283,0.981,284,1.199,285,1.833,288,1.121,289,0.918,290,1.121,291,1.285,292,1.121,293,1.895,294,2.366,301,0.792,302,2.697,303,2,308,2.653,314,2.653,319,2.321,462,1.202,517,3.058,583,2.97,584,5.036,593,2.653,613,3.25,615,2.918,618,4.617,620,3.694,630,2.653,652,2.639,756,2.432,878,3.04,879,3.647,891,3.366,895,2.321,896,4.368,897,4.368,898,4.368,899,3.121,900,3.121,901,3.121,902,4.368,903,3.121,904,3.121,905,3.694,906,3.121,907,3.121,908,4.368,909,4.368,910,2.084,911,3.121,912,3.121,913,3.121,914,4.368,915,3.694,916,3.121,917,3.121,918,3.121,919,3.121,920,3.121,921,3.121,922,3.121,923,3.121,924,3.121,925,3.121,926,3.121]],["title/interfaces/ReadBy.html",[455,0.443,910,2.243]],["body/interfaces/ReadBy.html",[3,0.267,4,0.223,9,0.223,20,0.223,28,0.024,32,0.267,154,0.058,155,0.068,156,0.058,162,1.091,176,0.313,275,1.839,276,3.11,301,1.091,308,3.11,309,1.936,455,0.793,570,1.839,583,2.264,879,3.421,910,4.016,927,4.331,928,4.331,929,4.331]],["title/components/ReadComponent.html",[0,0.482,144,0.987]],["body/components/ReadComponent.html",[0,0.737,1,0.95,2,1.231,3,0.169,4,0.141,5,1.242,6,1.242,7,1.242,8,1.242,9,0.141,11,1.406,12,2.114,13,1.242,14,2.551,15,2.384,16,1.72,18,1.72,20,0.141,21,0.938,22,2.282,23,0.677,24,1.005,27,0.63,28,0.026,29,1.607,30,0.703,31,0.544,32,0.169,33,0.39,35,0.464,92,1.659,100,1.537,101,1.16,102,1.799,104,1.659,124,1.085,125,1.72,126,1.607,127,1.242,128,1.63,129,1.242,130,0.931,131,1.242,132,0.95,133,0.889,134,1.242,135,0.95,136,1.242,137,0.95,138,1.72,139,0.95,140,0.95,141,1.242,142,0.95,143,1.242,144,1.63,145,1.242,146,0.95,147,1.242,148,0.95,149,1.242,150,0.95,151,1.724,152,1.242,153,1.242,154,0.036,155,0.05,156,0.036,162,0.812,175,0.831,176,0.314,177,0.831,184,2.129,206,1.015,209,2.491,213,1.152,238,1.799,256,2.732,261,1.428,262,1.844,264,1.16,278,1.085,280,1.085,283,1.015,293,1.962,302,2.282,308,2.717,378,2.989,470,2.298,546,1.659,583,2.859,591,4.123,593,3.534,610,3.329,611,3.329,640,4.123,651,2.732,661,2.403,664,2.732,727,2.732,743,3.086,879,4.203,928,4.686,930,2.732,931,5.134,932,4.475,933,4.475,934,4.475,935,4.475,936,3.231,937,4.475,938,3.231,939,2.732,940,3.231,941,3.231,942,3.231,943,3.231,944,3.231,945,3.231,946,2.732,947,4.475,948,3.231]],["title/components/RegisterComponent.html",[0,0.482,146,0.987]],["body/components/RegisterComponent.html",[0,0.55,1,0.579,2,0.853,3,0.103,4,0.086,5,0.757,6,0.757,7,0.757,8,0.757,9,0.086,11,0.974,12,1.579,13,0.757,14,2.316,15,2.164,16,1.191,18,1.191,20,0.086,21,0.65,22,1.79,23,0.65,24,1.04,27,0.605,28,0.026,29,1.113,30,0.571,31,0.331,32,0.103,33,0.238,35,0.283,44,1.096,92,1.592,94,2.328,97,1.882,98,1.882,100,2.589,101,1.561,102,1.726,104,1.592,108,1.315,110,1.196,112,1.726,116,1.196,117,1.726,119,2.421,120,2.421,121,1.196,123,1.196,124,0.661,125,1.191,126,1.113,127,0.757,128,1.39,129,0.757,130,0.695,131,0.757,132,0.579,133,0.542,134,0.757,135,0.579,136,0.757,137,0.579,138,1.191,139,0.579,140,0.579,141,0.757,142,0.579,143,0.757,144,0.579,145,0.757,146,1.278,147,0.757,148,0.579,149,0.757,150,0.579,151,0.661,152,0.757,153,0.757,154,0.022,155,0.043,156,0.022,162,0.562,164,3.158,165,3.518,166,3.234,167,1.882,168,2.56,169,1.315,170,3.354,171,2.164,175,0.507,176,0.234,177,0.507,180,3.904,181,2.07,182,2.306,184,1.475,189,1.196,190,1.37,196,2.904,198,1.968,199,1.473,200,2.22,202,1.315,204,1.71,205,2.904,206,0.619,207,1.315,208,1.096,209,2.421,210,0.871,213,1.217,216,1.465,217,2.904,218,3.55,221,1.465,222,1.37,224,2.306,227,1.315,228,0.937,229,0.707,232,1.465,235,3.741,236,2.621,237,3.242,238,2.134,239,2.07,240,1.882,241,0.937,242,1.315,243,1.465,244,1.315,245,1.196,246,1.315,247,1.315,248,1.196,249,1.665,250,1.665,251,1.196,252,2.134,253,1.465,254,1.665,255,1.465,267,1.113,285,1.041,304,1.37,309,1.39,310,0.937,338,1.191,339,2.698,357,1.465,388,1.561,389,3.636,419,1.096,424,1.011,458,2.428,462,0.853,476,1.882,530,3.192,537,1.592,549,1.475,551,1.096,583,1.37,600,2.306,601,2.306,609,2.233,685,2.306,713,1.196,787,3.191,798,2.621,799,2.621,806,2.621,808,4.246,811,2.852,816,3.242,819,1.665,823,1.665,824,1.665,825,1.665,826,3.999,832,1.665,860,2.621,863,1.665,949,1.465,950,3.834,951,3.1,952,3.1,953,3.1,954,3.834,955,3.834,956,3.1,957,1.969,958,1.969,959,3.1,960,3.677,961,3.1,962,3.1,963,3.1,964,3.1,965,3.677,966,3.999,967,4.348,968,3.1,969,3.1,970,3.1,971,3.1,972,1.969,973,3.1,974,1.969,975,3.1,976,1.969,977,4.348,978,1.969,979,1.969,980,1.969,981,1.969,982,3.1,983,1.665,984,1.665,985,1.665,986,1.969,987,1.665,988,1.665,989,1.665,990,1.665,991,1.969,992,1.665,993,1.969,994,1.969,995,3.1,996,1.969,997,1.969,998,1.969,999,1.969,1000,1.969,1001,1.969,1002,1.969,1003,1.969,1004,1.969,1005,1.969,1006,1.969,1007,1.969,1008,1.969,1009,1.969,1010,1.969,1011,3.1,1012,1.969,1013,1.969,1014,3.1,1015,1.969,1016,1.969,1017,1.969,1018,3.1,1019,1.969,1020,1.969,1021,1.969,1022,1.969,1023,3.1,1024,1.969]],["title/components/TopBarComponent.html",[0,0.482,148,0.987]],["body/components/TopBarComponent.html",[0,0.745,1,0.969,2,1.249,3,0.172,4,0.144,5,1.267,6,1.267,7,1.267,8,1.267,9,0.144,11,1.426,12,2.137,13,1.267,14,2.559,15,2.391,16,1.744,18,1.744,20,0.144,21,0.951,22,2.302,23,1.087,24,1.063,27,0.885,28,0.026,29,1.863,30,0.626,31,0.555,32,0.172,33,0.398,35,0.473,41,2.755,59,4.727,101,2.27,119,1.835,120,1.835,124,1.107,125,1.744,126,1.629,127,1.267,128,1.644,129,1.267,130,0.823,131,1.267,132,0.969,133,0.907,134,1.267,135,0.969,136,1.267,137,0.969,138,1.744,139,0.969,140,0.969,141,1.267,142,0.969,143,1.267,144,0.969,145,1.267,146,0.969,147,1.267,148,1.644,149,1.267,150,0.969,151,1.107,152,1.267,153,1.267,162,0.823,176,0.201,198,1.693,199,1.267,252,1.835,253,2.452,267,1.629,277,1.184,281,1.107,304,2.006,312,2.33,342,1.868,351,4.507,388,1.629,389,3.031,390,2.755,422,1.184,424,2.87,462,1.538,609,2.33,713,2.002,804,2.755,805,2.755,811,2.452,858,3.375,960,4.727,1025,5.123,1026,2.787,1027,4.538,1028,5.189,1029,4.538,1030,5.59,1031,4.538,1032,5.59,1033,4.538,1034,3.296,1035,4.538,1036,4.538,1037,3.296,1038,3.296,1039,3.296,1040,3.296,1041,2.452,1042,3.296,1043,3.296,1044,3.296,1045,3.296,1046,3.296,1047,3.296]],["title/classes/User.html",[33,0.405,462,0.924]],["body/classes/User.html",[3,0.25,4,0.209,9,0.209,20,0.209,24,1.169,28,0.025,32,0.25,33,0.579,154,0.054,155,0.065,156,0.054,162,1.049,176,0.394,186,2.67,275,1.722,301,1.215,309,1.825,313,2.67,398,3.568,422,2.076,458,3.187,462,1.708,605,2.67,734,2.952,743,2.67,787,3.769,1048,4.056,1049,4.796,1050,4.796,1051,4.796,1052,4.796,1053,4.796]],["title/interfaces/UserMy.html",[436,1.597,455,0.443]],["body/interfaces/UserMy.html",[3,0.223,4,0.186,9,0.186,20,0.186,28,0.026,30,0.517,32,0.223,35,0.774,154,0.048,155,0.061,156,0.048,162,0.978,176,0.378,275,1.537,301,1.07,302,2.22,303,1.981,310,2.564,312,2.768,313,3.448,314,3.273,422,2.119,426,2.738,436,2.564,455,0.778,461,3.273,462,1.841,536,3.001,570,1.537,605,3.448,733,4.353,734,2.946,743,3.001,756,3.001,878,3.285,1054,2.859,1055,3.619,1056,5.39,1057,5.39,1058,5.39,1059,5.39,1060,5.39]],["title/interfaces/UserMyList.html",[455,0.443,1061,2.243]],["body/interfaces/UserMyList.html",[3,0.24,4,0.201,9,0.201,20,0.201,28,0.026,30,0.556,32,0.24,35,0.913,44,3.142,154,0.052,155,0.064,156,0.052,162,1.024,176,0.398,275,1.654,301,1.183,303,2.048,309,1.794,422,2.19,426,2.81,455,0.805,462,1.749,570,1.654,733,4.246,734,3.024,756,3.142,878,3.396,929,3.896,1061,3.769,1062,3.896,1063,4.197]],["title/interfaces/UserReal.html",[455,0.443,1064,2.243]],["body/interfaces/UserReal.html",[3,0.244,4,0.203,9,0.203,20,0.203,28,0.026,32,0.244,154,0.053,155,0.064,156,0.053,162,1.032,176,0.407,301,1.273,302,2.629,303,2.06,309,1.878,455,0.616,458,3.279,570,1.676,787,3.878,1054,3.118,1064,3.799,1065,3.948,1066,6.386,1067,6.386]],["title/injectables/UserService.html",[257,0.808,339,1.724]],["body/injectables/UserService.html",[3,0.167,4,0.139,9,0.139,20,0.139,21,0.93,23,0.669,24,1,27,0.995,28,0.026,30,0.757,31,0.537,32,0.167,33,0.385,35,0.926,41,2.695,93,0.878,128,1.5,130,1,151,1.49,154,0.036,155,0.05,156,0.036,175,1.419,176,0.354,177,1.419,184,2.622,204,1.732,229,1.146,257,1.067,258,1.518,261,1.411,262,1.98,264,1.593,269,2.831,270,2.651,273,2.27,274,1.49,275,1.832,277,1.98,278,1.49,280,1.072,281,1.072,283,1.003,284,1.226,285,1.49,288,1.146,289,0.938,290,1.146,291,1.314,292,1.146,294,2.27,301,0.805,302,2.583,303,1.851,309,1.704,319,2.374,339,2.279,389,3.682,436,1.518,437,1.777,462,1.862,519,2.279,546,1.639,605,2.47,613,3.301,756,2.47,814,2.699,878,2.47,905,3.752,915,2.699,1041,2.374,1061,2.132,1063,4.101,1068,2.374,1069,4.437,1070,4.437,1071,3.192,1072,3.192,1073,3.192,1074,4.437,1075,5.513,1076,4.437,1077,4.437,1078,3.752,1079,3.192,1080,3.192,1081,4.437,1082,4.437,1083,4.437,1084,3.192,1085,3.192,1086,3.192,1087,2.374,1088,2.374,1089,3.192,1090,3.192,1091,4.437,1092,3.192,1093,3.192,1094,3.192,1095,3.192]],["title/interfaces/UserToken.html",[438,1.724,455,0.443]],["body/interfaces/UserToken.html",[3,0.247,4,0.206,9,0.206,20,0.206,28,0.025,30,0.573,32,0.247,35,0.824,154,0.053,155,0.065,156,0.053,162,1.042,176,0.402,301,1.193,303,2.074,422,2.218,426,2.838,438,2.949,455,0.626,462,1.766,570,1.703,733,4.288,734,3.054,878,3.439,1054,3.167,1096,4.01,1097,6.177,1098,4.742]],["title/components/UsersComponent.html",[0,0.482,150,0.987]],["body/components/UsersComponent.html",[0,0.679,1,0.818,2,1.108,3,0.145,4,0.121,5,1.069,6,1.069,7,1.069,8,1.069,9,0.121,11,1.265,12,1.948,13,1.069,14,2.488,15,2.324,16,1.547,18,1.547,20,0.121,21,0.844,22,2.135,23,0.583,24,1.04,27,0.786,28,0.026,29,1.699,30,0.664,31,0.468,32,0.145,33,0.336,35,0.849,44,2.242,93,0.766,100,1.915,101,0.999,122,1.549,123,1.69,124,0.935,125,1.547,126,1.446,127,1.069,128,1.524,129,1.069,130,0.94,131,1.069,132,0.818,133,0.766,134,1.069,135,0.818,136,1.069,137,0.818,138,1.547,139,0.818,140,0.818,141,1.069,142,0.818,143,1.069,144,0.818,145,1.069,146,0.818,147,1.069,148,0.818,149,1.069,150,1.524,151,1.847,152,1.069,153,1.069,154,0.031,155,0.045,156,0.031,162,0.73,175,1.036,176,0.35,177,1.036,206,0.874,209,2.242,213,1.036,261,1.23,262,1.699,264,0.999,267,1.862,274,0.935,275,0.999,276,3.148,278,1.352,280,0.935,283,0.874,285,0.935,288,0.999,289,0.818,290,0.999,293,1.69,294,1.146,301,0.73,302,1.658,308,2.445,309,1.686,310,2.466,313,2.242,339,3.168,357,2.07,378,2.689,422,0.999,470,2.068,518,2.242,519,2.068,537,2.068,546,1.429,579,3.405,591,3.95,598,2.995,605,3.193,609,2.068,610,2.995,611,2.995,621,2.353,661,2.07,666,2.353,734,2.466,750,2.353,751,2.353,752,2.353,756,2.634,804,2.445,805,2.445,890,2.353,939,2.353,946,2.353,1063,2.995,1078,4.849,1099,2.07,1100,4.731,1101,4.026,1102,5.185,1103,4.026,1104,4.026,1105,2.783,1106,2.783,1107,4.026,1108,4.026,1109,2.783,1110,4.026,1111,4.026,1112,4.026,1113,4.026,1114,4.026,1115,4.026,1116,4.026,1117,2.783,1118,2.783,1119,4.026,1120,2.783,1121,2.783,1122,2.783,1123,2.783,1124,2.783,1125,5.185,1126,2.783,1127,2.783]],["title/injectables/UserwhoService.html",[257,0.808,592,1.869]],["body/injectables/UserwhoService.html",[3,0.21,4,0.175,9,0.175,20,0.175,21,1.086,23,1.086,24,1.098,27,1.119,28,0.026,30,0.774,31,0.677,32,0.21,33,0.486,35,0.578,93,1.108,130,0.94,154,0.045,155,0.058,156,0.045,175,1.334,176,0.35,177,1.334,204,1.802,213,1.036,257,1.247,258,1.915,261,1.78,262,2.174,264,1.862,274,1.741,277,1.446,278,1.741,280,1.352,281,1.352,282,2.995,283,1.629,284,1.547,285,2.104,287,2.995,288,1.446,289,1.184,290,1.446,291,1.658,292,1.446,294,1.658,302,2.135,303,1.741,304,2.292,437,2.242,592,2.887,1064,2.689,1088,2.995,1128,2.995,1129,6.056,1130,4.027,1131,4.027,1132,4.027,1133,4.027,1134,4.027,1135,4.027,1136,2.995,1137,5.185,1138,4.027,1139,4.027,1140,4.027,1141,5.185,1142,4.027]],["title/coverage.html",[1143,3.886]],["body/coverage.html",[0,0.919,1,0.856,9,0.127,10,2.46,28,0.026,33,0.502,35,0.418,110,2.946,116,4.178,132,0.856,135,0.856,137,0.856,139,0.856,140,0.856,142,0.856,144,0.856,146,0.856,148,0.856,150,0.856,154,0.033,155,0.047,156,0.033,157,2.46,158,2.165,159,2.46,173,1.943,176,0.178,247,1.943,257,1.442,259,3.738,260,3.738,274,2.012,283,0.914,286,2.165,289,0.856,298,1.943,315,1.943,320,2.46,337,1.384,338,1.118,339,1.494,351,2.165,360,2.165,388,1.045,392,1.494,397,2.165,399,2.46,409,2.165,411,3.241,414,1.384,436,1.384,438,1.494,451,1.62,453,1.62,455,0.845,456,1.62,462,0.801,554,2.46,571,2.46,573,2.46,574,2.46,583,1.286,592,1.62,593,1.767,609,3.476,714,2.165,723,4.102,728,2.46,729,2.46,732,2.46,781,4.102,786,2.46,788,2.46,843,2.46,851,2.46,865,3.608,868,2.165,874,2.46,891,1.943,892,2.46,895,3.093,910,1.943,927,2.46,930,2.46,949,3.608,1025,2.46,1026,2.46,1048,2.46,1054,3.24,1055,2.46,1061,1.943,1062,2.46,1064,1.943,1065,2.46,1068,3.608,1087,2.165,1096,2.46,1099,3.093,1128,3.608,1136,2.165,1143,2.46,1144,2.91,1145,2.91,1146,2.91,1147,5.292,1148,6.128,1149,5.993,1150,2.91,1151,2.91,1152,2.91,1153,2.91,1154,4.157,1155,2.91,1156,2.91,1157,2.91,1158,2.91,1159,2.91,1160,2.91,1161,2.91,1162,2.91,1163,2.91,1164,2.91,1165,2.91,1166,2.91,1167,4.851,1168,2.91,1169,2.91,1170,2.46,1171,4.851,1172,2.46,1173,6.687,1174,2.91,1175,4.157,1176,2.46,1177,2.91,1178,2.91,1179,2.91,1180,2.46,1181,3.515,1182,2.46,1183,3.515,1184,2.46,1185,2.46,1186,2.91,1187,2.91]],["title/dependencies.html",[328,2.7,1188,2.798]],["body/dependencies.html",[28,0.026,31,0.749,154,0.05,155,0.062,156,0.05,206,1.399,208,2.479,281,1.495,328,2.973,330,4.468,345,4.671,346,3.69,365,3.312,366,3.764,426,1.968,448,3.355,449,3.355,450,2.703,1041,3.312,1189,4.452,1190,6.798,1191,4.452,1192,5.524,1193,4.452,1194,4.452,1195,4.452,1196,4.452,1197,4.452,1198,4.452,1199,4.452,1200,4.452,1201,4.452,1202,4.452,1203,4.452,1204,4.452,1205,4.452,1206,4.452,1207,4.452,1208,4.452,1209,4.452,1210,4.452,1211,4.452,1212,4.452,1213,4.452,1214,4.452,1215,4.452,1216,4.452,1217,4.452,1218,4.452,1219,4.452,1220,4.452,1221,4.452,1222,4.452]],["title/index.html",[20,0.122,1223,2.798,1224,2.798]],["body/index.html",[0,0.861,4,0.193,15,1.595,28,0.02,36,4.665,41,2.698,130,0.806,154,0.05,155,0.062,156,0.05,218,2.698,289,1.306,342,1.829,365,4.961,405,3.756,506,3.35,519,2.833,536,2.473,549,2.113,1225,4.442,1226,6.001,1227,6.001,1228,4.442,1229,4.442,1230,4.442,1231,6.454,1232,4.442,1233,4.442,1234,4.442,1235,4.442,1236,4.442,1237,4.442,1238,4.442,1239,4.442,1240,4.442,1241,6.001,1242,6.001,1243,4.442,1244,6.454,1245,4.442,1246,4.442,1247,4.442,1248,4.442,1249,4.442,1250,3.756,1251,5.517,1252,5.517,1253,6.276,1254,4.442,1255,5.517,1256,4.442,1257,6.276,1258,4.442,1259,4.442,1260,6.001,1261,4.442,1262,4.442,1263,4.442]],["title/modules.html",[327,3.418]],["body/modules.html",[28,0.023,154,0.061,155,0.07,156,0.061,326,3.624,327,4.036,346,3.624,1264,5.425,1265,5.425,1266,5.425]],["title/overview.html",[1267,3.886]],["body/overview.html",[1,1.719,2,1.154,28,0.026,124,1.409,132,1.719,135,1.937,137,1.719,139,1.719,140,1.719,142,1.719,144,1.719,146,1.719,148,1.719,150,1.719,154,0.047,155,0.06,156,0.047,244,2.802,258,1.995,325,3.959,326,4.748,328,2.802,329,3.547,330,3.121,331,3.547,332,3.547,333,3.547,334,3.547,335,3.547,336,3.547,337,2.781,338,2.246,339,3.002,340,4.5,341,3.547,342,1.727,398,3.121,409,3.121,570,1.506,1267,3.547,1268,4.5,1269,5.322,1270,4.195]],["title/miscellaneous/variables.html",[1271,2.366,1272,3.418]],["body/miscellaneous/variables.html",[20,0.136,28,0.026,44,1.743,52,2.647,93,1.684,154,0.035,155,0.057,156,0.035,176,0.415,198,3.493,199,2.614,200,1.384,218,2.658,222,1.935,259,2.924,260,3.843,270,1.384,273,2.612,274,2.233,278,2.055,283,1.375,284,1.203,286,3.256,287,2.328,288,2.197,289,1.799,290,2.197,301,0.568,310,1.489,411,1.743,426,1.935,451,2.437,452,1.901,453,2.437,454,1.901,517,2.248,530,1.743,531,1.901,615,2.091,617,2.328,743,1.743,865,2.328,868,3.256,869,2.647,895,2.328,949,2.328,965,3.702,966,4.269,983,2.647,984,2.647,985,2.647,987,2.647,988,2.647,989,2.647,990,2.647,992,2.647,1068,2.328,1087,3.256,1088,3.256,1099,2.328,1128,2.328,1136,3.256,1170,3.702,1172,3.702,1176,2.647,1180,2.647,1181,4.623,1182,2.647,1183,2.647,1184,3.702,1185,3.702,1250,3.702,1268,2.647,1271,2.647,1272,2.647,1273,3.13,1274,4.377,1275,5.048,1276,3.13,1277,3.13,1278,4.377,1279,4.377,1280,3.13,1281,3.13,1282,4.377,1283,4.377,1284,4.377,1285,3.13,1286,3.13,1287,3.13,1288,3.13,1289,3.13,1290,3.13,1291,3.13,1292,3.13,1293,3.13,1294,3.13,1295,3.13]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["0.5sec",{"_index":1036,"title":{},"body":{"components/TopBarComponent.html":{}}}],["0/1",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1268,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.9",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":240,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["10.2.6",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":781,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["10px",{"_index":251,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["11",{"_index":1269,"title":{},"body":{"overview.html":{}}}],["12.12.67",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["1200px",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{}}}],["13/18",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":712,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["15px",{"_index":722,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["15vw",{"_index":782,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["190050037",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050069",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050117",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["190100036",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["1px",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":244,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":714,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["20px",{"_index":713,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["25",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["28",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["2]\\d[a",{"_index":987,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/UsersComponent.html":{}}}],["3.1.2",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["3.5.14",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["30px",{"_index":778,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["33",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":242,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4.5.3",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":727,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["40px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["5/9",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["50px",{"_index":724,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["55",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["576px",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["5px",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["6",{"_index":1023,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6.1.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":723,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["66",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1270,"title":{},"body":{"overview.html":{}}}],["70",{"_index":711,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["72",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["8",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{}}}],["80",{"_index":247,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["9.1.1",{"_index":1229,"title":{},"body":{"index.html":{}}}],["9.1.12",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["992px",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["9]\\d{6",{"_index":989,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["_models",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["_models/course",{"_index":282,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/UserwhoService.html":{}}}],["_models/list_of_student",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["_models/login",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["_models/message",{"_index":652,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["_models/message_sent",{"_index":912,"title":{},"body":{"injectables/MessageService.html":{}}}],["_models/read_by",{"_index":911,"title":{},"body":{"injectables/MessageService.html":{}}}],["_models/user",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["a_s_l",{"_index":577,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_s_l=false",{"_index":657,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l",{"_index":578,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l=false",{"_index":658,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["about'},{'name",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["access",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":167,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":591,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["activatedroute:activatedroute",{"_index":661,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["add_course_button",{"_index":779,"title":{},"body":{"components/HomeComponent.html":{}}}],["add_course_url",{"_index":271,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["add_course_url=course_url",{"_index":296,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse",{"_index":172,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"components/HomeComponent.html":{}}}],["addcourse',component",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourse(data",{"_index":265,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse(data:course",{"_index":295,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse:addcourseservice",{"_index":214,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["addcoursecomponent",{"_index":132,"title":{"components/AddCourseComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcoursecomponent,canactivate:[authguard",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourseservice",{"_index":173,"title":{"injectables/AddCourseService.html":{}},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"coverage.html":{}}}],["added",{"_index":193,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["adding",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adds",{"_index":306,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addstudent",{"_index":587,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addta",{"_index":588,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourse",{"_index":299,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addtocourse(username",{"_index":300,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse(username:string,id:number,status:string",{"_index":316,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse:addtocourseservice",{"_index":663,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourseservice",{"_index":298,"title":{"injectables/AddToCourseService.html":{}},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["al",{"_index":1024,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alerts",{"_index":602,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["alertservice",{"_index":995,"title":{},"body":{"components/RegisterComponent.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allowed",{"_index":619,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["allowed,else",{"_index":984,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{}}}],["already",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["android",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["angular",{"_index":1226,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":280,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["angular/compiler",{"_index":1041,"title":{},"body":{"components/TopBarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["angular/material/expansion",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["angular/platform",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":206,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["another",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{}}}],["api/usermy",{"_index":1142,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":290,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":326,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":397,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":624,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["array",{"_index":878,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{}}}],["artifacts",{"_index":1245,"title":{},"body":{"index.html":{}}}],["associated",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["associated.he/she",{"_index":1058,"title":{},"body":{"interfaces/UserMy.html":{}}}],["auth",{"_index":982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code",{"_index":1001,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form",{"_index":952,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form:formgroup",{"_index":994,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status",{"_index":953,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status=false",{"_index":993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authentication",{"_index":530,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":338,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice,authguard,authinterceptor",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["authgaurd",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authguard",{"_index":392,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":337,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":538,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authorization:jwt",{"_index":539,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authourization",{"_index":533,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authresult",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authresult.token",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authservice",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["auto",{"_index":239,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1236,"title":{},"body":{"index.html":{}}}],["back",{"_index":971,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backend",{"_index":505,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["background",{"_index":776,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bar",{"_index":1027,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar'},{'name",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["bar.component",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1029,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":1028,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts",{"_index":1026,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:14",{"_index":1039,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:15",{"_index":1033,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1037,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1034,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar/top",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":284,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":283,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/get",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/logout",{"_index":869,"title":{},"body":{"injectables/LogoutService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/refresh",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/courses",{"_index":287,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/user",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":771,"title":{},"body":{"components/HomeComponent.html":{}}}],["before",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["between",{"_index":764,"title":{},"body":{"components/HomeComponent.html":{}}}],["bg",{"_index":767,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["block",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["blue",{"_index":255,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":243,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["bootstrap",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["both",{"_index":620,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["bottom",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["box",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["breaking",{"_index":491,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["bro",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["browse",{"_index":1266,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":406,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":721,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["build",{"_index":1244,"title":{},"body":{"index.html":{}}}],["button",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["by:number",{"_index":886,"title":{},"body":{"interfaces/Message.html":{}}}],["calc(50",{"_index":772,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":498,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{}}}],["called",{"_index":611,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["calling",{"_index":969,"title":{},"body":{"components/RegisterComponent.html":{}}}],["calls",{"_index":598,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["calss",{"_index":183,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["can't",{"_index":636,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["canactivate",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cancel",{"_index":237,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["cancel:hover",{"_index":254,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["cant",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["card",{"_index":238,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["catch",{"_index":494,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cent",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["center",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1238,"title":{},"body":{"index.html":{}}}],["character",{"_index":572,"title":{},"body":{"interfaces/Course.html":{}}}],["characters",{"_index":236,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["chartreuse",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":549,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["check_login",{"_index":1032,"title":{},"body":{"components/TopBarComponent.html":{}}}],["checks",{"_index":960,"title":{},"body":{"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["chosen",{"_index":644,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["classes",{"_index":398,"title":{},"body":{"classes/AppPage.html":{},"classes/User.html":{},"overview.html":{}}}],["clears",{"_index":858,"title":{},"body":{"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["cli",{"_index":1227,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":540,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cluster_appmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":218,"title":{},"body":{"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":252,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["color:blue",{"_index":256,"title":{},"body":{"components/AddCourseComponent.html":{},"components/ReadComponent.html":{}}}],["color:red",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["combineall",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["common",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["concat(token",{"_index":543,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["consist",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Course.html":{}}}],["console.log(\"1",{"_index":522,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"error",{"_index":496,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"expiry",{"_index":482,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"hai",{"_index":944,"title":{},"body":{"components/ReadComponent.html":{}}}],["console.log(\"hello",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"hi",{"_index":873,"title":{},"body":{"injectables/LogoutService.html":{}}}],["console.log(\"init",{"_index":524,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"login",{"_index":525,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"payload",{"_index":473,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"start",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"token",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log('clicked",{"_index":753,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(authresult.token",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(data",{"_index":230,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{}}}],["console.log(error",{"_index":233,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.courseform.value",{"_index":225,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.read_list",{"_index":945,"title":{},"body":{"components/ReadComponent.html":{}}}],["console.log(this.registerform.value",{"_index":1022,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.submitted",{"_index":1004,"title":{},"body":{"components/RegisterComponent.html":{}}}],["const",{"_index":285,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constantpool",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["constraint",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constructor(authservice",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(formbuilder",{"_index":169,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":261,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constructor(private",{"_index":546,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(router",{"_index":854,"title":{},"body":{"components/LogoutComponent.html":{}}}],["constructor(who",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["container",{"_index":725,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["contains",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MessageSent.html":{},"components/ReadComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":246,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["controls",{"_index":205,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["convenience",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["converting",{"_index":474,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cors",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["course",{"_index":35,"title":{"interfaces/Course.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["course'},{'name",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["course.code",{"_index":754,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.component",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["course.component.html",{"_index":161,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.scss",{"_index":160,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts",{"_index":159,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["course.component.ts:12",{"_index":197,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:13",{"_index":201,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:14",{"_index":174,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:21",{"_index":178,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:30",{"_index":203,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:40",{"_index":179,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.name",{"_index":755,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.service",{"_index":212,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["course.service.ts",{"_index":260,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.service.ts:15",{"_index":263,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["course.service.ts:25",{"_index":266,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["course.service.ts:27",{"_index":305,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["course/:id",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["course/:id/list",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["course/:id/read",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["course/add",{"_index":158,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["course:course",{"_index":730,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["course:number",{"_index":885,"title":{},"body":{"interfaces/Message.html":{}}}],["course_id",{"_index":579,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["course_id:any",{"_index":1121,"title":{},"body":{"components/UsersComponent.html":{}}}],["course_status",{"_index":580,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["course_url",{"_index":286,"title":{},"body":{"injectables/AddCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseform",{"_index":163,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["coursehomecomponent",{"_index":137,"title":{"components/CourseHomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursehomecomponent,canactivate:[authguard",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["courses",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{}}}],["coursestatus",{"_index":315,"title":{"interfaces/CourseStatus.html":{}},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["cover",{"_index":784,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1143,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cs251",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["current",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{}}}],["currentuservalue",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["danger",{"_index":768,"title":{},"body":{"components/HomeComponent.html":{}}}],["dashboard",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dashboard.herokuapp.com",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":229,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["data=>{console.log(data",{"_index":696,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["data=>{console.log(data);window.alert(\"ta",{"_index":690,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data=>{window.alert(\"student",{"_index":682,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data['message']=message['message_text",{"_index":918,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=false",{"_index":923,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=message['message_priority",{"_index":920,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=true",{"_index":922,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['status']=status",{"_index":318,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["data['to']=to",{"_index":917,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['username']=username",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":1060,"title":{},"body":{"interfaces/UserMy.html":{}}}],["date",{"_index":479,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["days",{"_index":502,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decides",{"_index":311,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["declarations",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["decode(token",{"_index":489,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decoding",{"_index":497,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["default",{"_index":198,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["delete",{"_index":1108,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student",{"_index":1103,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student(username",{"_index":1105,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student(username:string",{"_index":1123,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_students",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_students(id",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_students(id:number,username:string",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":328,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":275,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["desktops",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["details",{"_index":186,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"classes/User.html":{}}}],["dev",{"_index":1233,"title":{},"body":{"index.html":{}}}],["development",{"_index":1230,"title":{},"body":{"index.html":{}}}],["devices",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["different",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1243,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1247,"title":{},"body":{"index.html":{}}}],["display",{"_index":758,"title":{},"body":{"components/HomeComponent.html":{}}}],["dist",{"_index":1246,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["don't",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["done",{"_index":596,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["dont",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":495,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["e2e",{"_index":1258,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":399,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":404,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":402,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["element(by.css('app",{"_index":407,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["empty",{"_index":707,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["end",{"_index":1257,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":232,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error=>{window.alert(\"adding",{"_index":684,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["etc",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["everything",{"_index":970,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":1255,"title":{},"body":{"index.html":{}}}],["exp",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expansion",{"_index":716,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["expiration",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expiresat",{"_index":480,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expiry",{"_index":475,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["exports",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["expression",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":610,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["extracting",{"_index":487,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["f",{"_index":168,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["f1",{"_index":955,"title":{},"body":{"components/RegisterComponent.html":{}}}],["failed",{"_index":603,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["false",{"_index":200,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":614,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["fetches",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["field",{"_index":961,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fields",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["files",{"_index":1239,"title":{},"body":{"index.html":{}}}],["fingertips",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["first",{"_index":209,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["first_name",{"_index":1066,"title":{},"body":{"interfaces/UserReal.html":{}}}],["fit",{"_index":783,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1249,"title":{},"body":{"index.html":{}}}],["flex",{"_index":757,"title":{},"body":{"components/HomeComponent.html":{}}}],["float",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["flow",{"_index":759,"title":{},"body":{"components/HomeComponent.html":{}}}],["font",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":170,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":646,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formcontrol('',validators.required",{"_index":671,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formgroup",{"_index":196,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["from_username",{"_index":875,"title":{},"body":{"interfaces/Message.html":{}}}],["from_username:string",{"_index":889,"title":{},"body":{"interfaces/Message.html":{}}}],["frontend",{"_index":975,"title":{},"body":{"components/RegisterComponent.html":{}}}],["function",{"_index":267,"title":{},"body":{"injectables/AddCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["functions",{"_index":857,"title":{},"body":{"components/LogoutComponent.html":{}}}],["further",{"_index":1259,"title":{},"body":{"index.html":{}}}],["gap",{"_index":765,"title":{},"body":{"components/HomeComponent.html":{}}}],["gaurav",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["generate",{"_index":1241,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1225,"title":{},"body":{"index.html":{}}}],["get_messages",{"_index":896,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id",{"_index":900,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id:number):observable",{"_index":913,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_students",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["get_students(id",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["get_students(id:number):observable",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["getexpiration",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["getf",{"_index":202,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getf1",{"_index":980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getter",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getting",{"_index":1223,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":400,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["girish",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["give",{"_index":1114,"title":{},"body":{"components/UsersComponent.html":{}}}],["given",{"_index":185,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["go",{"_index":1262,"title":{},"body":{"index.html":{}}}],["group",{"_index":249,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["grow",{"_index":769,"title":{},"body":{"components/HomeComponent.html":{}}}],["guard",{"_index":409,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":948,"title":{},"body":{"components/ReadComponent.html":{}}}],["header",{"_index":241,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["headers",{"_index":288,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":248,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":1260,"title":{},"body":{"index.html":{}}}],["helps",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["here",{"_index":537,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["high",{"_index":703,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["himself",{"_index":1111,"title":{},"body":{"components/UsersComponent.html":{}}}],["holds",{"_index":1059,"title":{},"body":{"interfaces/UserMy.html":{}}}],["home",{"_index":189,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["home'},{'name",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["home.component.html",{"_index":576,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":575,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.ts",{"_index":574,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:119",{"_index":604,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:143",{"_index":622,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:163",{"_index":616,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:21",{"_index":629,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:22",{"_index":631,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:26",{"_index":642,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:30",{"_index":645,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:31",{"_index":647,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:32",{"_index":638,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:36",{"_index":627,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:40",{"_index":628,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:44",{"_index":633,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:48",{"_index":632,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:52",{"_index":594,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:68",{"_index":608,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:86",{"_index":648,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:99",{"_index":595,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home/course",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home/home.component",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":139,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecomponent,canactivate:[authguard",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":264,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["http://localhost:4200",{"_index":1235,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":293,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["http_interceptors",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":262,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["httpclientmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule,http_interceptors",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httphandler",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpheaders",{"_index":278,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpoptions",{"_index":274,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":279,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["httprequest",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["https://back",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["id",{"_index":302,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["id:number",{"_index":881,"title":{},"body":{"interfaces/Message.html":{}}}],["identifier",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1129,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["idle",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["idservice",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["idservice:userwhoservice",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["ie11",{"_index":774,"title":{},"body":{"components/HomeComponent.html":{}}}],["if(!this.auth_code_status",{"_index":1015,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if((localstorage.getitem('token')==null)||(localstorage.getitem('token')=='undefined",{"_index":1045,"title":{},"body":{"components/TopBarComponent.html":{}}}],["if(data['is_professor']==true",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(data['prior']==\"true",{"_index":921,"title":{},"body":{"injectables/MessageService.html":{}}}],["if(localstorage.getitem('is_professor')=='true",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["if(professor_expression.test(s)==true",{"_index":1012,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(student_expression.test(s)==true",{"_index":1010,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.message.invalid",{"_index":693,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(this.username.invalid",{"_index":678,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(tok==null||tok=='undefined",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["iitb",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["img",{"_index":780,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["important",{"_index":720,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["imports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["including",{"_index":1119,"title":{},"body":{"components/UsersComponent.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["inherit",{"_index":719,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["injectable",{"_index":257,"title":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["injectables",{"_index":258,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"overview.html":{}}}],["input",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["input[type=\"radio",{"_index":250,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["intercept",{"_index":556,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":534,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["interceptor",{"_index":554,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":555,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":455,"title":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["interfaces",{"_index":570,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"overview.html":{}}}],["interval",{"_index":1030,"title":{},"body":{"components/TopBarComponent.html":{}}}],["interval=setinterval(()=>{this.check_login();},500",{"_index":1043,"title":{},"body":{"components/TopBarComponent.html":{}}}],["invalid",{"_index":181,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["is_professor",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["is_professor:[false,validators.required",{"_index":999,"title":{},"body":{"components/RegisterComponent.html":{}}}],["is_professor:boolean",{"_index":890,"title":{},"body":{"interfaces/Message.html":{},"components/UsersComponent.html":{}}}],["isloggedin",{"_index":526,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isloggedout",{"_index":528,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isnt",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jquery",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["json.parse(atob(token.split(\".\")[1",{"_index":493,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.parse(expiration",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.stringify(expiresat.valueof",{"_index":486,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["justify",{"_index":762,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jwtpayload",{"_index":456,"title":{"interfaces/JWTPayload.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["karma",{"_index":1256,"title":{},"body":{"index.html":{}}}],["keep",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["kinds",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["krushnakant",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["landscape",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["large",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{}}}],["last",{"_index":623,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["last_name",{"_index":1067,"title":{},"body":{"interfaces/UserReal.html":{}}}],["leads",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["lg",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["list",{"_index":756,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["list_of_students",{"_index":1102,"title":{},"body":{"components/UsersComponent.html":{}}}],["list_of_students:any",{"_index":1120,"title":{},"body":{"components/UsersComponent.html":{}}}],["literal",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":164,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loading.note",{"_index":634,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["local",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["localstorage.clear",{"_index":872,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.getitem('expires_at",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token",{"_index":488,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token')!=\"undefined",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token')!=null",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('expires_at",{"_index":871,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.removeitem('token",{"_index":870,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.setitem('expires_at",{"_index":485,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.setitem('is_professor','false",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('is_professor','true",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["location.reload",{"_index":697,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["logged",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["logged_in",{"_index":1031,"title":{},"body":{"components/TopBarComponent.html":{}}}],["logged_in:boolean",{"_index":1042,"title":{},"body":{"components/TopBarComponent.html":{}}}],["loggedin",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["loggen",{"_index":1057,"title":{},"body":{"interfaces/UserMy.html":{}}}],["logic",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login",{"_index":388,"title":{"interfaces/Login.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["login'},{'name",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":521,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["login.component.html",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["login_button",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["login_url",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":140,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["logout",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["logout'},{'name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["logout.component.html",{"_index":853,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":852,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.service",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout/logout.component",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["logout:logoutservice",{"_index":547,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout_url",{"_index":868,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutcomponent",{"_index":142,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logoutservice",{"_index":414,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["logs",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{}}}],["long",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["looking",{"_index":1113,"title":{},"body":{"components/UsersComponent.html":{}}}],["low",{"_index":705,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["lower",{"_index":706,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l",{"_index":581,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l=false",{"_index":660,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l",{"_index":582,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l=false",{"_index":659,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["main",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["makes",{"_index":613,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["making",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["mat",{"_index":715,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["matches",{"_index":967,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["md",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["media",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{}}}],["medium",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["members",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["message",{"_index":583,"title":{"interfaces/Message.html":{}},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["message.from_username",{"_index":709,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message.message",{"_index":710,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:formgroup",{"_index":656,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:string",{"_index":883,"title":{},"body":{"interfaces/Message.html":{}}}],["message_id",{"_index":933,"title":{},"body":{"components/ReadComponent.html":{}}}],["message_id:any",{"_index":940,"title":{},"body":{"components/ReadComponent.html":{}}}],["message_priority",{"_index":674,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["message_priority:boolean",{"_index":894,"title":{},"body":{"interfaces/MessageSent.html":{}}}],["message_text",{"_index":673,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["message_text:string",{"_index":893,"title":{},"body":{"interfaces/MessageSent.html":{}}}],["messages",{"_index":584,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["messagesent",{"_index":891,"title":{"interfaces/MessageSent.html":{}},"body":{"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messageservice",{"_index":593,"title":{"injectables/MessageService.html":{}},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"coverage.html":{}}}],["messageservice:messageservice",{"_index":664,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["messsage",{"_index":937,"title":{},"body":{"components/ReadComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["min",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["miscellaneous",{"_index":1271,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{}}}],["module",{"_index":325,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":327,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["moment().isbefore(this.getexpiration",{"_index":527,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment().isbetween(this.getexpiration().subtract(1",{"_index":501,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment(expiresat",{"_index":516,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment.unix(payload.exp",{"_index":481,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moodle",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["more",{"_index":1261,"title":{},"body":{"index.html":{}}}],["moves",{"_index":859,"title":{},"body":{"components/LogoutComponent.html":{}}}],["moving",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["multi",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["my.ts",{"_index":1055,"title":{},"body":{"interfaces/UserMy.html":{},"coverage.html":{}}}],["name",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["navigate",{"_index":1234,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":188,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["navigateto",{"_index":401,"title":{},"body":{"classes/AppPage.html":{}}}],["necessary",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["needed",{"_index":973,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":192,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["next",{"_index":535,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(cloned",{"_index":544,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(req",{"_index":545,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["ng",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["ngx",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["none_type",{"_index":1040,"title":{},"body":{"components/TopBarComponent.html":{}}}],["noopanimationsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":1110,"title":{},"body":{"components/UsersComponent.html":{}}}],["note:u",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["notifications",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["notify",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["number",{"_index":303,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["object",{"_index":273,"title":{},"body":{"injectables/AddCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":905,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":277,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["obtained",{"_index":902,"title":{},"body":{"injectables/MessageService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["onsubmit",{"_index":166,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onto",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["option",{"_index":643,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["optional",{"_index":177,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["orange",{"_index":777,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":532,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["overflow",{"_index":718,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["overview",{"_index":1267,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p[a",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1188,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":245,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":190,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":717,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["param",{"_index":294,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["parameters",{"_index":175,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["parsing",{"_index":492,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["part",{"_index":649,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["particular",{"_index":308,"title":{},"body":{"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["parts",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["passing",{"_index":908,"title":{},"body":{"injectables/MessageService.html":{}}}],["password",{"_index":787,"title":{},"body":{"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["path",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["path:'**',component:logincomponent",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":471,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["people",{"_index":928,"title":{},"body":{"interfaces/ReadBy.html":{},"components/ReadComponent.html":{}}}],["performs",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["permission",{"_index":1115,"title":{},"body":{"components/UsersComponent.html":{}}}],["person",{"_index":313,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{}}}],["piazza",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["pipe(first",{"_index":227,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["place",{"_index":1017,"title":{},"body":{"components/RegisterComponent.html":{}}}],["popper.js",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["portrait",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["post",{"_index":269,"title":{},"body":{"injectables/AddCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["prajeeth",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["prefix",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["previous",{"_index":708,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prior",{"_index":876,"title":{},"body":{"interfaces/Message.html":{}}}],["prior:boolean",{"_index":887,"title":{},"body":{"interfaces/Message.html":{}}}],["priority",{"_index":704,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["private",{"_index":213,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["proceeds",{"_index":968,"title":{},"body":{"components/RegisterComponent.html":{}}}],["process",{"_index":599,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prod",{"_index":1248,"title":{},"body":{"index.html":{}}}],["production",{"_index":1250,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prof",{"_index":726,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["professor",{"_index":605,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["professor_expression",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["professor_expression=/p[a",{"_index":991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["professors",{"_index":990,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["profs",{"_index":635,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["project",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["promise",{"_index":403,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":162,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["protractor",{"_index":405,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["providedin",{"_index":291,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["providers",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["radius",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":879,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{}}}],["read'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["read.component.html",{"_index":932,"title":{},"body":{"components/ReadComponent.html":{}}}],["read.component.scss",{"_index":931,"title":{},"body":{"components/ReadComponent.html":{}}}],["read/read.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["read_by",{"_index":877,"title":{},"body":{"interfaces/Message.html":{}}}],["read_by:array",{"_index":888,"title":{},"body":{"interfaces/Message.html":{}}}],["read_list",{"_index":934,"title":{},"body":{"components/ReadComponent.html":{}}}],["read_list:any",{"_index":941,"title":{},"body":{"components/ReadComponent.html":{}}}],["read_message",{"_index":897,"title":{},"body":{"injectables/MessageService.html":{}}}],["read_message(id",{"_index":903,"title":{},"body":{"injectables/MessageService.html":{}}}],["read_message(id:number",{"_index":925,"title":{},"body":{"injectables/MessageService.html":{}}}],["readby",{"_index":910,"title":{"interfaces/ReadBy.html":{}},"body":{"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"coverage.html":{}}}],["readcomponent",{"_index":144,"title":{"components/ReadComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readcomponent,canactivate:[authguard",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["reader.username",{"_index":947,"title":{},"body":{"components/ReadComponent.html":{}}}],["readme",{"_index":1263,"title":{},"body":{"index.html":{}}}],["real",{"_index":1135,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["real.ts",{"_index":1065,"title":{},"body":{"interfaces/UserReal.html":{},"coverage.html":{}}}],["receive",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["receive,it",{"_index":880,"title":{},"body":{"interfaces/Message.html":{}}}],["red",{"_index":785,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirect",{"_index":551,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirects",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refresh",{"_index":504,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refresh_url",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshes",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refreshtoken",{"_index":500,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["register",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["register(user",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":951,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":950,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["register_url",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registercomponent",{"_index":146,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1063,"title":{},"body":{"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["registerform",{"_index":954,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":977,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regular",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["regularly",{"_index":1035,"title":{},"body":{"components/TopBarComponent.html":{}}}],["reload",{"_index":1237,"title":{},"body":{"index.html":{}}}],["reloaded",{"_index":625,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["remember",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["remove",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["removed",{"_index":1107,"title":{},"body":{"components/UsersComponent.html":{}}}],["removes",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["render",{"_index":641,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["rendering",{"_index":499,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["represent",{"_index":1056,"title":{},"body":{"interfaces/UserMy.html":{}}}],["representing",{"_index":983,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":276,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/UsersComponent.html":{}}}],["req",{"_index":558,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":541,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["req.headers.set('authorization",{"_index":542,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["request",{"_index":270,"title":{},"body":{"injectables/AddCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":531,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":235,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rest",{"_index":606,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":204,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["returnurl",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["right",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["right:80",{"_index":1126,"title":{},"body":{"components/UsersComponent.html":{}}}],["root",{"_index":292,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["root'},{'name",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":171,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["router:router",{"_index":665,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LogoutComponent.html":{}}}],["routermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":760,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":1231,"title":{},"body":{"index.html":{}}}],["running",{"_index":1251,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":281,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":210,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["s!=\"undefined",{"_index":1009,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s!=null",{"_index":1008,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s=this.f1.auth_code.value",{"_index":1007,"title":{},"body":{"components/RegisterComponent.html":{}}}],["same",{"_index":195,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["scaffolding",{"_index":1240,"title":{},"body":{"index.html":{}}}],["screen",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["see",{"_index":637,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["seen",{"_index":626,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["send",{"_index":618,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["send(either",{"_index":909,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message",{"_index":898,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id",{"_index":906,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id:number,message:messagesent,to:string",{"_index":916,"title":{},"body":{"injectables/MessageService.html":{}}}],["sending",{"_index":272,"title":{},"body":{"injectables/AddCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["sends",{"_index":268,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/MessageService.html":{}}}],["sendstudent",{"_index":589,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sendta",{"_index":590,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sent",{"_index":615,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["sent:string",{"_index":882,"title":{},"body":{"interfaces/Message.html":{}}}],["separate",{"_index":773,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":1232,"title":{},"body":{"index.html":{}}}],["server",{"_index":506,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"index.html":{}}}],["server/website",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["service",{"_index":184,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["services/add",{"_index":211,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["services/authentication.service",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["services/base",{"_index":939,"title":{},"body":{"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["services/logout.service",{"_index":861,"title":{},"body":{"components/LogoutComponent.html":{}}}],["services/message.service",{"_index":651,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["services/user.service",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["services/userwho.service",{"_index":650,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["set",{"_index":640,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/ReadComponent.html":{}}}],["setinterval(()=>{this.check_login();},500",{"_index":1038,"title":{},"body":{"components/TopBarComponent.html":{}}}],["sets",{"_index":518,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["setsession",{"_index":520,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["setsession(authresult",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["sharereplay",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["show",{"_index":191,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["shrink",{"_index":770,"title":{},"body":{"components/HomeComponent.html":{}}}],["sign",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["similar",{"_index":607,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["size",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["slateblue",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["sm",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["small",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["smartphones",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["solid",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["sources",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["space",{"_index":763,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["span')).gettext",{"_index":408,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../add",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.ts",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logout.service.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.component.ts",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userwho.service.ts",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_models/course",{"_index":728,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["src/app/_models/course.ts",{"_index":571,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/app/_models/list_of_student.ts",{"_index":1062,"title":{},"body":{"interfaces/UserMyList.html":{},"coverage.html":{}}}],["src/app/_models/login.ts",{"_index":786,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/_models/message.ts",{"_index":874,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/_models/message_sent.ts",{"_index":892,"title":{},"body":{"interfaces/MessageSent.html":{},"coverage.html":{}}}],["src/app/_models/read_by.ts",{"_index":927,"title":{},"body":{"interfaces/ReadBy.html":{},"coverage.html":{}}}],["src/app/_models/user",{"_index":1054,"title":{},"body":{"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["src/app/_models/user.ts",{"_index":1048,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:5",{"_index":1053,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:6",{"_index":1052,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:7",{"_index":1050,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:8",{"_index":1051,"title":{},"body":{"classes/User.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:9",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/add",{"_index":157,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/course",{"_index":573,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:47",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/logout/logout.component.ts",{"_index":851,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/logout/logout.component.ts:20",{"_index":856,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/logout/logout.component.ts:9",{"_index":855,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/read/read.component.ts",{"_index":930,"title":{},"body":{"components/ReadComponent.html":{},"coverage.html":{}}}],["src/app/read/read.component.ts:15",{"_index":938,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/read/read.component.ts:19",{"_index":935,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/read/read.component.ts:28",{"_index":936,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":949,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/register/register.component.ts:26",{"_index":976,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":974,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:34",{"_index":978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":972,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:39",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:72",{"_index":979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:77",{"_index":981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:89",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/add",{"_index":259,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:101",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:112",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:128",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:135",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:148",{"_index":557,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/services/authentication.service.ts:169",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:179",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:37",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:41",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:66",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:73",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:86",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/base.ts",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts",{"_index":865,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts:14",{"_index":866,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/logout.service.ts:23",{"_index":867,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/message.service.ts",{"_index":895,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts:16",{"_index":899,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:28",{"_index":901,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:39",{"_index":907,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:61",{"_index":904,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/user.service.ts",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:38",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/userwho.service.ts",{"_index":1128,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/userwho.service.ts:16",{"_index":1130,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:24",{"_index":1134,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:32",{"_index":1133,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:39",{"_index":1131,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/top",{"_index":1025,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["src/app/users/users.component.ts",{"_index":1099,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.component.ts:22",{"_index":1118,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:24",{"_index":1117,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:26",{"_index":1104,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:43",{"_index":1109,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:60",{"_index":1106,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srivatsa",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["started",{"_index":1224,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":304,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserwhoService.html":{}}}],["status(id",{"_index":1132,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status(id:number",{"_index":1139,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status.ts",{"_index":729,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["status:string",{"_index":731,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["stays",{"_index":194,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["stop",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["stops",{"_index":182,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["storage",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["store",{"_index":639,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["stored",{"_index":536,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"index.html":{}}}],["stores",{"_index":630,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["storing",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["string",{"_index":301,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":310,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/Message.html":{},"components/RegisterComponent.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["student.username",{"_index":1125,"title":{},"body":{"components/UsersComponent.html":{}}}],["student/ta",{"_index":307,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["student_expression",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["student_expression=/[1",{"_index":986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["students",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserMyList.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["students/ta's",{"_index":1116,"title":{},"body":{"components/UsersComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["submits",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted",{"_index":165,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted_add",{"_index":585,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_add=false",{"_index":653,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m",{"_index":586,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m=false",{"_index":654,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["subscribe",{"_index":228,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":668,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["success",{"_index":187,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{}}}],["successful",{"_index":600,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":1021,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successfully\");location.reload",{"_index":683,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["such",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["suffix",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1264,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["svg",{"_index":1265,"title":{},"body":{"modules.html":{}}}],["ta",{"_index":314,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{}}}],["ta's",{"_index":621,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["ta/prof",{"_index":597,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["ta\\'s",{"_index":1127,"title":{},"body":{"components/UsersComponent.html":{}}}],["table",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["takes",{"_index":860,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["tap",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tap(response",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["team",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/TopBarComponent.html":{}}}],["tells",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":1254,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1253,"title":{},"body":{"index.html":{}}}],["text",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MessageSent.html":{},"components/RegisterComponent.html":{}}}],["this.a_s_l=false",{"_index":686,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_s_l=true",{"_index":680,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=false",{"_index":691,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=true",{"_index":688,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addcourse.addcourse(this.courseform.value",{"_index":226,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'student').pipe(first",{"_index":681,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'ta').pipe(first",{"_index":689,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.auth_code_form.controls",{"_index":1003,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form.invalid",{"_index":1006,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form=this.formbuilder.group",{"_index":1000,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=false",{"_index":1014,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=true",{"_index":1011,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":996,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.login(this.loginform.value",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isloggedin",{"_index":548,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.authservice.refreshtoken",{"_index":550,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.check_login",{"_index":1044,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.course_id=this.activatedroute.snapshot.parammap.get('id",{"_index":666,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.course_status=data['status",{"_index":669,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.courseform",{"_index":215,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.controls",{"_index":220,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.invalid",{"_index":223,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courses",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.decode(token",{"_index":472,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.formbuilder.group",{"_index":216,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getexpiration",{"_index":503,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.get(url,httpoptions",{"_index":915,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["this.http.get(use_url",{"_index":1138,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.get(use_url,httpoptions",{"_index":1141,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.post(add_course_url,data,httpoptions",{"_index":297,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["this.http.post(login_url,data",{"_index":523,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(refresh_url,{token:this.token",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(register_url",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(url,data,httpoptions",{"_index":319,"title":{},"body":{"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["this.idservice.identity().pipe(first",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.is_professor=false",{"_index":752,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.is_professor=true",{"_index":751,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.isloggedin",{"_index":529,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.loading",{"_index":224,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loading=false",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.logged_in=false",{"_index":1046,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.logged_in=true",{"_index":1047,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.loginform",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout.logout",{"_index":552,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{}}}],["this.m_s_l=false",{"_index":702,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_s_l=true",{"_index":700,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=false",{"_index":698,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=true",{"_index":694,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message.controls",{"_index":676,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message=this.formbuilder.group",{"_index":672,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message_id=this.activatedroute.snapshot.parammap.get('id",{"_index":942,"title":{},"body":{"components/ReadComponent.html":{}}}],["this.messageservice.get_messages(this.course_id).subscribe(data1=>this.messages=data1",{"_index":675,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.read_message(this.message_id).subscribe(data=>{this.read_list=data",{"_index":943,"title":{},"body":{"components/ReadComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'student').pipe(first",{"_index":701,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'ta').pipe(first",{"_index":695,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.registerform",{"_index":997,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":1002,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1005,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.patchvalue({is_professor:true",{"_index":1013,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.returnurl",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":863,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['addcourse",{"_index":234,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['home",{"_index":231,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.router.navigate(['login",{"_index":553,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setsession(response",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.submitted",{"_index":221,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.submitted_add=false",{"_index":687,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_add=true",{"_index":677,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=false",{"_index":699,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=true",{"_index":692,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.username=new",{"_index":670,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.userservice.delete_students(this.course_id,username).subscribe(data=>{location.reload",{"_index":1124,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data",{"_index":946,"title":{},"body":{"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["this.userservice.register(this.registerform.value",{"_index":1019,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.who.status(this.course_id",{"_index":667,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.who.who().subscribe(data",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{}}}],["time",{"_index":476,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{}}}],["timestamp",{"_index":478,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["title",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CourseHomeComponent.html":{}}}],["to:string",{"_index":884,"title":{},"body":{"interfaces/Message.html":{}}}],["tok=localstorage.getitem('token",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["token.ts",{"_index":1096,"title":{},"body":{"interfaces/UserToken.html":{},"coverage.html":{}}}],["token_form",{"_index":1097,"title":{},"body":{"interfaces/UserToken.html":{}}}],["token_form:string",{"_index":1098,"title":{},"body":{"interfaces/UserToken.html":{}}}],["top",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["topbarcomponent",{"_index":148,"title":{"components/TopBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tot",{"_index":766,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":222,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":490,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tslib",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["type",{"_index":176,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jasmine",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["types/jasminewd2",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["types/jwt",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1112,"title":{},"body":{"components/UsersComponent.html":{}}}],["unauthenticated",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["unit",{"_index":1252,"title":{},"body":{"index.html":{}}}],["unix",{"_index":477,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["unsuccessful",{"_index":685,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["up",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["updates",{"_index":612,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["upport",{"_index":775,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":517,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["url=base_url+'/api'+'/readby/'+id.tostring",{"_index":926,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/messages/'+id.tostring",{"_index":914,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/user/'+id.tostring()+'/'+username",{"_index":317,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["url=base_url+'/api/usercourse/'+id.tostring",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1242,"title":{},"body":{"index.html":{}}}],["use_url",{"_index":1137,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["use_url=base_url+'/api/user/'+id.tostring()+'/abc",{"_index":1140,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["useclass",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":617,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":462,"title":{"classes/User.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["user_id",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["user_url",{"_index":1136,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermy",{"_index":436,"title":{"interfaces/UserMy.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermylist",{"_index":1061,"title":{"interfaces/UserMyList.html":{}},"body":{"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":309,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/ReadBy.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["username,password,email",{"_index":1049,"title":{},"body":{"classes/User.html":{}}}],["username:formcontrol",{"_index":655,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["username:string",{"_index":929,"title":{},"body":{"interfaces/ReadBy.html":{},"interfaces/UserMyList.html":{}}}],["userreal",{"_index":1064,"title":{"interfaces/UserReal.html":{}},"body":{"interfaces/UserReal.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["users",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1101,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":1100,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["userscomponent",{"_index":150,"title":{"components/UsersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userscomponent,canactivate:[authguard",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":339,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservice:userservice",{"_index":1122,"title":{},"body":{"components/UsersComponent.html":{}}}],["usertoken",{"_index":438,"title":{"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["userwhoservice",{"_index":592,"title":{"injectables/UserwhoService.html":{}},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["using",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["uuid",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(5",{"_index":219,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["validators.minlength(6",{"_index":998,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":217,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":199,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":962,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":609,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1272,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["verifies",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{}}}],["version",{"_index":1228,"title":{},"body":{"index.html":{}}}],["via",{"_index":519,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["view",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["webmail",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["website",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["whether",{"_index":312,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{}}}],["white",{"_index":253,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["who:userwhoservice",{"_index":662,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["window",{"_index":601,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["window.alert(\"incorrect",{"_index":1016,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"invalid",{"_index":679,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["window.alert(\"registered",{"_index":1020,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"registration",{"_index":1018,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert('invalid",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["window.alert(data['prior",{"_index":924,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.alert(message['message_text",{"_index":919,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.localstorage.clear",{"_index":862,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wont",{"_index":985,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":864,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wrap",{"_index":761,"title":{},"body":{"components/HomeComponent.html":{}}}],["xl",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{}}}],["xs",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{}}}],["yes",{"_index":963,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z0",{"_index":988,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["z]{2,3}\\d{3",{"_index":992,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\n\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n        NOTIFY ME!\n        \n            Course project - CS251\n        \n        \n        \n            \n                This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,\n            \n        \n    \n\n\nTeam Members \n\n    \n        \n            \n                \n                \n                    Girish Srivatsa \n                    190050069\n                \n            \n        \n        \n            \n                \n                \n                    Krushnakant\n                    190100036\n                \n            \n        \n        \n            \n                \n                \n                    Prajeeth\n                    190050117\n                \n            \n        \n        \n            \n                \n                \n                    Gaurav\n                    190050037\n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                // Small tablets and large smartphones (landscape view)\n$screen-sm-min: 576px;\n// Small tablets (portrait view)\n$screen-md-min: 768px;\n// Tablets and small desktops\n$screen-lg-min: 992px;\n// Large tablets and desktops\n$screen-xl-min: 1200px;\n@mixin xs {\n    @media (max-width: #{$screen-sm-min}) {\n        @content;\n    }\n}\n@mixin sm {\n    @media (max-width: #{$screen-md-min}) {\n        @content;\n    }\n}\n\n// Medium devices\n@mixin md {\n    @media (max-width: #{$screen-lg-min}) {\n        @content;\n    }\n}\n// Large devices\n@mixin lg {\n    @media (max-width: #{$screen-xl-min}) {\n        @content;\n    }\n}\n\n.about {\n    box-align: center;\n}\n\n.logo {\n    margin-top: 5%;\n    float: left;\n    border: 1px solid black;\n    @include md {\n        width: 50%;\n        margin-left: 25%;\n        margin-right: 25%;\n    }\n    ;\n}\n\n.content {\n    margin-left: 5%;\n    margin-top: 8%;\n    border-radius: 5px;\n   \n    @include md {\n        margin-left: 0%;\n        text-align: center;\n    }\n}\n\n.cent {\n    text-align: center;\n    @include md {\n        text-align: center;\n    }\n}\n\n.members {\n    text-align: center;\n    font-size: 40px;\n    margin-top: 3%;\n    margin-bottom: 3%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NOTIFY ME!                    Course project - CS251                                                    This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,                        Team Members                                                                             Girish Srivatsa                     190050069                                                                                                            Krushnakant                    190100036                                                                                                            Prajeeth                    190050117                                                                                                            Gaurav                    190050037                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddCourseComponent.html":{"url":"components/AddCourseComponent.html","title":"component - AddCourseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddCourseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-course/add-course.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-course\n            \n\n            \n                styleUrls\n                ./add-course.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-course.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CourseForm\n                            \n                            \n                                loading\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, addCourse: AddCourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addCourse\n                                                  \n                                                        \n                                                                        AddCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:40\n                \n            \n\n\n            \n                \n                    If the course form is invalid it stops\nIt calss addCourse service to add the course of given details\nIf it is a success it navigates to the home page which will also show the newly added course\nElse it stays at the same page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CourseForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/add-course/add-course.component.ts:30\n                                \n                            \n                    \n                        \n                                To return form controls to the html page\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddCourseService} from '../services/add-course.service';\n@Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.scss']\n})\nexport class AddCourseComponent implements OnInit {\n  CourseForm: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private addCourse:AddCourseService,\n  ) { }\n\n  ngOnInit(): void {\n    this.CourseForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      code: ['', [Validators.required, Validators.maxLength(5)]]\n  });\n  }\n  /**\n   * To return form controls to the html page\n   */\n  get f() { return this.CourseForm.controls; }\n  /**\n   * If the course form is invalid it stops\n   * \n   * It calss addCourse service to add the course of given details\n   * \n   * If it is a success it navigates to the home page which will also show the newly added course\n   * \n   * Else it stays at the same page\n   */\n  onSubmit(){\n    \n    this.submitted = true;\n    if (this.CourseForm.invalid) {\n      return;\n    }\n    this.loading = true;\n   // console.log(this.CourseForm.value);\n    this.addCourse.addCourse(this.CourseForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {console.log(data);\n                        this.router.navigate(['home']);\n                },\n                error => {\n                   // console.log(error);\n                    this.router.navigate(['addcourse']);\n                });\n  }\n}\n\n    \n\n    \n        \n\n\n    Add a Course!\n    \n        \n\n            \n                Name\n                \n                \n                    Name is required\n                \n            \n            \n                Code\n                \n                \n                    Code is required\n                    Code must be 5 characters\n                \n            \n            \n                \n                                            \n                         Add Course\n                \n                \n                \n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./add-course.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n}\n\n.card-header {\n    font-size: 35px;\n    text-align: center;\n}\n\n.card-body {\n    // margin-top: 2%;\n    padding-top: 2%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.add {\n    padding-right: 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.required{\n    font-size: medium;\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Add a Course!                                        Name                                                    Name is required                                                        Code                                                    Code is required                    Code must be 5 characters                                                                                                                             Add Course                                                                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddCourseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddCourseService.html":{"url":"injectables/AddCourseService.html","title":"injectable - AddCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCourse\n                        \n                        \n                    \n                \n            \n            \n                \naddCourse(data: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-course.service.ts:25\n                \n            \n\n\n            \n                \n                    This function sends a post request to ADD_COURSE_URL sending the course object with httpOptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this represents the course object to be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Post Request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst COURSE_URL = BASE_URL+'/api/courses/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddCourseService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  /**\n   * This function sends a post request to ADD_COURSE_URL sending the course object with httpOptions\n   * @param data this represents the course object to be added.\n   * @return Post Request\n   */\n  addCourse(data:Course): Observable{\n    var ADD_COURSE_URL=COURSE_URL;\n    return this.http.post(ADD_COURSE_URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddToCourseService.html":{"url":"injectables/AddToCourseService.html","title":"injectable - AddToCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddToCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-to-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddToCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-to-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddToCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddToCourse(username: string, id: number, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-to-course.service.ts:27\n                \n            \n\n\n            \n                \n                    AddToCourse service adds a student/TA in a particular course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the username of the student to be added in the course\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the course id\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This decides whether the person is a TA or a student in that course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {CourseStatus} from '../_models/course-status';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddToCourseService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n  /**\n   * AddToCourse service adds a student/TA in a particular course\n   * \n   * @param username This represents the username of the student to be added in the course\n   * @param id This represents the course id\n   * @param status This decides whether the person is a TA or a student in that course\n   */\n  AddToCourse(username:string,id:number,status:string): Observable{\n    const URL=BASE_URL+'/api/user/'+id.toString()+'/'+username+'/';\n    var data = {};\n    data['status']=status\n    return this.http.post(URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"dashboard\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"dashboard\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nReadComponent\n\nReadComponent\n\nAppModule -->\n\nReadComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AddCourseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CourseHomeComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            ReadComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TopBarComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {UserService} from './services/user.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AddCourseComponent } from './add-course/add-course.component'\nimport { CourseHomeComponent } from './course-home/course-home.component';\nimport { combineAll } from 'rxjs/operators';\nimport { AboutComponent } from './about/about.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatExpansionModule }from '@angular/material/expansion';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {AuthenticationService,AuthGuard,AuthInterceptor} from './services/authentication.service';\nimport { UsersComponent } from './users/users.component';\nimport { ReadComponent } from './read/read.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TopBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    LogoutComponent,\n    AddCourseComponent,\n    CourseHomeComponent,\n    AboutComponent,\n    UsersComponent,\n    ReadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent,canActivate:[AuthGuard]},\n      {path: 'about', component: AboutComponent},\n      {path: 'addcourse',component: AddCourseComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id', component: CourseHomeComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id/list', component: UsersComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id/read', component: ReadComponent,canActivate:[AuthGuard]},\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'logout', component: LogoutComponent,},\n      {path:'**',component:LoginComponent},\n    ]),\n    NgbModule,\n    MatExpansionModule,\n    NoopAnimationsModule,\n  ],\n  providers: [\n    UserService,\n    AuthenticationService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/authentication.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, logout: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:169\n                            \n                        \n\n                \n                    \n                            Authgaurd to block unauthenticated page access\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logout\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        this returns a boolean value which tells whether its logged in or not\nIf you are logged in this refreshes the token to make sure the website isnt idle for long\nIf not logged in it logs out and redirects to login page\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\n//import {UserMy} from '../_models/user-my';\n//import {UserToken} from '../_models/user-token';\n//import * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\n//import * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\n/*const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};*/\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  /**\n   * storing current user value i.e, username if necessary\n   */\n  currentUserValue; \n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token; \n    console.log(\"token got\");\n    /**\n     * using function decode to get payload of JWT token\n     * \n     */\n    const payload = this.decode(token); \n    console.log(\"payload got\");\n    /**\n     * converting expiry time from unix timestamp to date time\n     */\n    const expiresAt = moment.unix(payload.exp); \n    console.log(\"expiry got\");\n    console.log(authResult.token); \n    /**\n     * storing token and expiry details\n     */\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n  /**\n   * @return extracting token\n   */\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n  \n  /**\n   * @param token JWT TOKEN\n   */\n  private decode(token: string) {\n    try {\n        /**\n         * breaking JWT into 3 components and parsing\n         */\n        return JSON.parse(atob(token.split(\".\")[1])); \n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n  /**\n   * to call on rendering any page \n   */\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {  \n      /**\n       * sending a refresh request to backend server if loggedIn\n       */\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)), \n        shareReplay(),\n      ).subscribe();\n    }\n  }\n  /**\n   * @return Returns expiry time of the token\n   */\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt); \n  }\n  /**\n   * sending post to get-token url\n   * @param data Login object\n   * @return Sets data of get-token result via setSession\n   */\n  login(data: Login)\n  { console.log(\"1\");\n    \n    return this.http.post(LOGIN_URL,data)  \n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response); \n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n  \n  /**\n   * @return Returns if user is logged in\n   */\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration()); \n  }\n  \n  /**\n   * @return Returns if user is logged out\n   */\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor { \n  /** \n   * HttpInterceptor to add authentication requests to outgoing requests\n   * \n   * @return Returns request with authourization request\n   **/\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    /**\n     * token value is stored here\n     */\n    const token = localStorage.getItem('token');\n    if (token) {\n      /**\n       * add authorization header \"Authorization:JWT token\"\n       */\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token)) \n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /**\n   * Authgaurd to block unauthenticated page access\n  **/\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      /**\n       * check login status and refresh\n       */\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      /**\n       * for unauthenticated request redirect to login\n       */\n      this.logout.logout(); \n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:148\n                \n            \n\n\n            \n                \n                    HttpInterceptor to add authentication requests to outgoing requests\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Returns request with authourization request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\n//import {UserMy} from '../_models/user-my';\n//import {UserToken} from '../_models/user-token';\n//import * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\n//import * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\n/*const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};*/\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  /**\n   * storing current user value i.e, username if necessary\n   */\n  currentUserValue; \n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token; \n    console.log(\"token got\");\n    /**\n     * using function decode to get payload of JWT token\n     * \n     */\n    const payload = this.decode(token); \n    console.log(\"payload got\");\n    /**\n     * converting expiry time from unix timestamp to date time\n     */\n    const expiresAt = moment.unix(payload.exp); \n    console.log(\"expiry got\");\n    console.log(authResult.token); \n    /**\n     * storing token and expiry details\n     */\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n  /**\n   * @return extracting token\n   */\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n  \n  /**\n   * @param token JWT TOKEN\n   */\n  private decode(token: string) {\n    try {\n        /**\n         * breaking JWT into 3 components and parsing\n         */\n        return JSON.parse(atob(token.split(\".\")[1])); \n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n  /**\n   * to call on rendering any page \n   */\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {  \n      /**\n       * sending a refresh request to backend server if loggedIn\n       */\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)), \n        shareReplay(),\n      ).subscribe();\n    }\n  }\n  /**\n   * @return Returns expiry time of the token\n   */\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt); \n  }\n  /**\n   * sending post to get-token url\n   * @param data Login object\n   * @return Sets data of get-token result via setSession\n   */\n  login(data: Login)\n  { console.log(\"1\");\n    \n    return this.http.post(LOGIN_URL,data)  \n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response); \n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n  \n  /**\n   * @return Returns if user is logged in\n   */\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration()); \n  }\n  \n  /**\n   * @return Returns if user is logged out\n   */\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor { \n  /** \n   * HttpInterceptor to add authentication requests to outgoing requests\n   * \n   * @return Returns request with authourization request\n   **/\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    /**\n     * token value is stored here\n     */\n    const token = localStorage.getItem('token');\n    if (token) {\n      /**\n       * add authorization header \"Authorization:JWT token\"\n       */\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token)) \n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /**\n   * Authgaurd to block unauthenticated page access\n  **/\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      /**\n       * check login status and refresh\n       */\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      /**\n       * for unauthenticated request redirect to login\n       */\n      this.logout.logout(); \n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decode\n                            \n                            \n                                getExpiration\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                login\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JWT TOKEN\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpiration\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Returns expiry time of the token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Returns if user is logged in\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedOut\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns if user is logged out\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(data: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:112\n                \n            \n\n\n            \n                \n                    sending post to get-token url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Sets data of get-token result via setSession\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:86\n                \n            \n\n\n            \n                \n                    to call on rendering any page \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSession(authResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authResult\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUserValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:37\n                            \n                        \n\n                \n                    \n                        storing current user value i.e, username if necessary\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\n//import {UserMy} from '../_models/user-my';\n//import {UserToken} from '../_models/user-token';\n//import * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\n//import * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\n/*const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};*/\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  /**\n   * storing current user value i.e, username if necessary\n   */\n  currentUserValue; \n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token; \n    console.log(\"token got\");\n    /**\n     * using function decode to get payload of JWT token\n     * \n     */\n    const payload = this.decode(token); \n    console.log(\"payload got\");\n    /**\n     * converting expiry time from unix timestamp to date time\n     */\n    const expiresAt = moment.unix(payload.exp); \n    console.log(\"expiry got\");\n    console.log(authResult.token); \n    /**\n     * storing token and expiry details\n     */\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n  /**\n   * @return extracting token\n   */\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n  \n  /**\n   * @param token JWT TOKEN\n   */\n  private decode(token: string) {\n    try {\n        /**\n         * breaking JWT into 3 components and parsing\n         */\n        return JSON.parse(atob(token.split(\".\")[1])); \n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n  /**\n   * to call on rendering any page \n   */\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {  \n      /**\n       * sending a refresh request to backend server if loggedIn\n       */\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)), \n        shareReplay(),\n      ).subscribe();\n    }\n  }\n  /**\n   * @return Returns expiry time of the token\n   */\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt); \n  }\n  /**\n   * sending post to get-token url\n   * @param data Login object\n   * @return Sets data of get-token result via setSession\n   */\n  login(data: Login)\n  { console.log(\"1\");\n    \n    return this.http.post(LOGIN_URL,data)  \n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response); \n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n  \n  /**\n   * @return Returns if user is logged in\n   */\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration()); \n  }\n  \n  /**\n   * @return Returns if user is logged out\n   */\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor { \n  /** \n   * HttpInterceptor to add authentication requests to outgoing requests\n   * \n   * @return Returns request with authourization request\n   **/\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    /**\n     * token value is stored here\n     */\n    const token = localStorage.getItem('token');\n    if (token) {\n      /**\n       * add authorization header \"Authorization:JWT token\"\n       */\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token)) \n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /**\n   * Authgaurd to block unauthenticated page access\n  **/\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      /**\n       * check login status and refresh\n       */\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      /**\n       * for unauthenticated request redirect to login\n       */\n      this.logout.logout(); \n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course.ts\n        \n\n            \n                Description\n            \n            \n                course object consist of course name and course code which is 5 character\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Course {\n    name: string;\n    code: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseHomeComponent.html":{"url":"components/CourseHomeComponent.html","title":"component - CourseHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-home/course-home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-home\n            \n\n            \n                styleUrls\n                ./course-home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./course-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a_s_l\n                            \n                            \n                                a_t_l\n                            \n                            \n                                course_id\n                            \n                            \n                                course_status\n                            \n                            \n                                m_s_l\n                            \n                            \n                                m_t_l\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                submitted_add\n                            \n                            \n                                submitted_m\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddStudent\n                            \n                            \n                                AddTA\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                SendStudent\n                            \n                            \n                                SendTA\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, activatedRoute: ActivatedRoute, who: UserwhoService, addtocourse: AddToCourseService, messageService: MessageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addtocourse\n                                                  \n                                                        \n                                                                        AddToCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddStudent\n                        \n                        \n                    \n                \n            \n            \n                \nAddStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:99\n                \n            \n\n\n            \n                \n                    This function adds a student which can be done by TA/Prof\nIf username is invalid it stops\nElse it calls the addToCourse to add the student\nIf the process is successful it window alerts the process is successful else it alerts process failed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddTA\n                        \n                        \n                    \n                \n            \n            \n                \nAddTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:119\n                \n            \n\n\n            \n                \n                    This function adds a student which can be done only by the professor\nRest is similar to AddStudent()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:68\n                \n            \n\n\n            \n                \n                    First course_id variable is extracted from the path using activatedRoute\nThen who service is called which updates the course_status variable\nThen messageService is called which makes a get request to fetch all the messages sent in the course\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendStudent\n                        \n                        \n                    \n                \n            \n            \n                \nSendStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:163\n                \n            \n\n\n            \n                \n                    This function is used to send message to students which is allowed for both the  professor and TA's\nRest is similar as SendTA()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendTA\n                        \n                        \n                    \n                \n            \n            \n                \nSendTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:143\n                \n            \n\n\n            \n                \n                    This function is used to send message to TA which is allowed only for the professor\nIf the message is invalid it stops\nElse it calls the send message service with last argument as TA to send the message\nIf the message is sent the page is reloaded and the message sent will be seen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:36\n                            \n                        \n\n                \n                    \n                        add student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:40\n                            \n                        \n\n                \n                    \n                        add TA loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:21\n                            \n                        \n\n                \n                    \n                        this stores course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_status\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:48\n                            \n                        \n\n                \n                    \n                        message student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:44\n                            \n                        \n\n                \n                    \n                        message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                        to store the set of messages sent in the course to render in the html\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_add\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:26\n                            \n                        \n\n                \n                    \n                        to store if add person option is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_m\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:30\n                            \n                        \n\n                \n                    \n                        to store if send message is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course-home/course-home.component.ts:86\n                                \n                            \n                    \n                        \n                                to provide form controls to the html part\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {UserwhoService}  from '../services/userwho.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddToCourseService} from '../services/add-to-course.service';\nimport {MessageService} from '../services/message.service';\n//import {MatExpansionModule} from '@angular/material/expansion';\n//import { Observable } from 'rxjs';\n//import {Message} from '../_models/message';\n@Component({\n  selector: 'app-course-home',\n  templateUrl: './course-home.component.html',\n  styleUrls: ['./course-home.component.scss']\n})\nexport class CourseHomeComponent implements OnInit {\n  /**\n   * this stores course id\n   */\n  course_id;\n  course_status;\n  /**\n   * to store if add person option is chosen\n   */\n  submitted_add=false;\n  /**\n   * to store if send message is chosen\n   */\n  submitted_m=false;\n  username:FormControl;\n  message:FormGroup;\n  /**\n   * add student loading to check if the process is loading\n   */\n  a_s_l=false;\n  /**\n   * add TA loading to check if the process is loading\n   */\n  a_t_l=false;\n  /**\n   * message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n   */\n  m_t_l=false;\n  /**\n   * message student loading to check if the process is loading\n   */\n  m_s_l=false;\n  /**\n   * to store the set of messages sent in the course to render in the html\n   */\n  messages\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute:ActivatedRoute,\n    private who:UserwhoService,\n    private addtocourse:AddToCourseService,\n    private messageService:MessageService,\n    private router:Router,\n  ) { }\n  /**\n   * First course_id variable is extracted from the path using activatedRoute\n   * \n   * Then who service is called which updates the course_status variable\n   * \n   * Then messageService is called which makes a get request to fetch all the messages sent in the course\n   */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.who.STATUS(this.course_id)\n    .pipe(first())\n    .subscribe(data=>{\n      console.log(data);\n      this.course_status=data['status'];\n    });\n    this.username=new FormControl('',Validators.required);\n    this.message=this.formBuilder.group({\n      message_text: ['', Validators.required],\n      message_priority: [false, Validators.required]\n  });\n    this.messageService.GET_MESSAGES(this.course_id).subscribe(data1=>this.messages=data1);\n  }\n  /**\n   * to provide form controls to the html part\n   */\n  get f()\n  {\n    return this.message.controls;\n  }\n  /**\n   * This function adds a student which can be done by TA/Prof\n   * \n   * If username is invalid it stops\n   * \n   * Else it calls the addToCourse to add the student\n   * \n   * If the process is successful it window alerts the process is successful else it alerts process failed\n   */\n  AddStudent(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      window.alert(\"Invalid Username\");\n      return ;\n    }\n    this.a_s_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'student').pipe(first())\n    .subscribe(\n      data=>{window.alert(\"Student is added successfully\");location.reload();},\n      error=>{window.alert(\"Adding student is unsuccessful\");}\n    )\n    this.a_s_l=false;\n    this.submitted_add=false;\n  }\n  /**\n   * This function adds a student which can be done only by the professor\n   * \n   * Rest is similar to AddStudent()\n   */\n  AddTA(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      return ;\n    }\n    this.a_t_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);window.alert(\"TA is added successfully\");location.reload();},\n      error=>{window.alert(\"adding TA unsuccessful\");}\n      \n    )\n    this.a_t_l=false;\n    this.submitted_add=false;\n  }\n  /**\n   * This function is used to send message to TA which is allowed only for the professor\n   * \n   * If the message is invalid it stops\n   * \n   * Else it calls the send message service with last argument as TA to send the message\n   * \n   * If the message is sent the page is reloaded and the message sent will be seen\n   */\n  SendTA(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_t_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    );\n    this.m_t_l=false;\n    this.submitted_m=false;\n  }\n  /**\n   * This function is used to send message to students which is allowed for both the  professor and TA's\n   * \n   * Rest is similar as SendTA()\n   */\n  SendStudent(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_s_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'student').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    )\n    this.m_s_l=false;\n    this.submitted_m=false;\n  }\n}\n\n    \n\n    \n            \n     \n        \n        \n            Add a student / TA\n        \n    \n    \n        \n              Username:\n              \n              \n                Username is required\n              \n              Add TA\n              Add Student  \n          \n      \n \n\n    \n     \n         -->\n        \n            Send a Message!\n        \n    \n    \n        \n            \n                Message:\n                \n                \n                    High Priority\n                    \n                \n                \n                    Low Priority\n                    \n                -->\n                \n                Lower Priority\n                \n                High Priority\n                \n                    Message cannot be empty\n                \n                \n                    Send to TA\n                \n                \n                    Send to Students  \n                \n            \n        \n      \n \n\n\n    Previous Messages\n         \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n           \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n    \n\n   Low Priority Messages:\n         \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n               \n    \n    \n    Low Priority Messages:\n         \n        \n            \n                \n                    {{message.from_username}}\n                \n                \n                    {{message.message}}\n                \n            \n               \n    -->\n\n\n    \n\n    \n                \n                    ./course-home.component.scss\n                \n                .form-control {\n    width: 70%;\n    margin-left: 15%;\n    margin-right: 15%;\n    margin-bottom: 20px;\n    height: 35px;\n    font-size: medium;\n    // text-align: center;\n    // margin-top: 20%;\n}\n\n.mat-expansion-panel {\n    overflow: inherit !important;\n}\n\n.btn-xl {\n    padding: 10px 20px;\n    font-size: 15px;\n    border-radius: 10px;\n}\n\n.add {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 10%;\n    text-align: center;\n}\n.send {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    text-align: center;\n}\n\n.message {\n    margin-top: 5%;\n    height: 20%;\n}\n\n.message-title {\n    margin-left: 50px;\n}\n\n.container {\n    margin-top: 5%;\n}\n\n.priority{\n    font-size: 20px;\n}\n\n.card{\n    \n    margin-bottom: 2%;\n}\n\n.prof{\n    margin-right: 40%;\n}\n\n.TA{\n    margin-left: 70%;\n}\n\n.card-header{\n    color: blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     Add a student / TA                                      Username:                                            Username is required                            Add TA              Add Student                                     -->                    Send a Message!                                                    Message:                                                    High Priority                                                                        Low Priority                                    -->                                Lower Priority                                High Priority                                    Message cannot be empty                                                    Send to TA                                                    Send to Students                                                 Previous Messages                                                                                         {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                                                                                           {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                   Low Priority Messages:                                                                                         {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                           Low Priority Messages:                                                                 {{message.from_username}}                                                    {{message.message}}                                               -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CourseStatus.html":{"url":"interfaces/CourseStatus.html","title":"interface - CourseStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CourseStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course-status.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface CourseStatus {\n    course:Course;\n    status:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                is_professor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddCourse\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(who: UserwhoService, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddCourse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:47\n                \n            \n\n\n            \n                \n                    This allows the professor to add a new course\nThis function leads to a different component add course\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:31\n                \n            \n\n\n            \n                \n                    Calls who service to get the set of courses of a person\nAlso it updates the is_professor variable \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n                \n                    \n                        Contains the set of courses the user is associated with\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stores if the user is a professor or not\nThe main constraint is that a professor cannot be a student in another course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserwhoService} from '../services/userwho.service';\nimport {AuthenticationService} from '../services/authentication.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Contains the set of courses the user is associated with\n   */\n  courses;\n  /**\n   * Stores if the user is a professor or not\n   * \n   * The main constraint is that a professor cannot be a student in another course\n   */\n  is_professor;\n  constructor(\n    private who: UserwhoService,\n    private router: Router,\n    private authenticationService : AuthenticationService,\n  ) { }\n  /**\n   * Calls who service to get the set of courses of a person\n   * \n   * Also it updates the is_professor variable \n   */\n  ngOnInit(): void {\n    this.who.WHO().subscribe(data => {console.log(data);\n                                      this.courses = data;\n                                    });\n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n  }\n  /**\n   * This allows the professor to add a new course\n   * \n   * This function leads to a different component add course\n   */\n  AddCourse(){\n    console.log('clicked');\n    this.router.navigate(['addcourse']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        Add Course\n    \n\n\n\n    \n        \n            \n            \n                {{course.code}}\n                 {{course.name}}\n                List of Users\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding-top: 20px;\n    margin-left: 10%;\n    margin-right: 10%;\n    gap: 40px;\n}\n\n.tot {\n    border: 1px solid black;\n}\n\n.card bg-danger {\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-basis: calc(50% - 10px);\n    /* separate properties for IE11 upport */\n    background: orange;\n    margin: 5px;\n    padding-top: 30px;\n}\n\n.add_course_button {\n    padding-top: 40px;\n    padding-right: auto;\n    padding-left: 40px;\n        \n}\n\n.card-img-top {\n    width: 100%;\n    height: 15vw;\n    object-fit: cover;\n}\n\n.addCourse {\n    background-color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Course                                                        {{course.code}}                 {{course.name}}                List of Users                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTPayload.html":{"url":"interfaces/JWTPayload.html","title":"interface - JWTPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JWTPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        exp\n                                \n                                \n                                        user_id\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\n//import {UserMy} from '../_models/user-my';\n//import {UserToken} from '../_models/user-token';\n//import * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\n//import * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\n/*const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};*/\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  /**\n   * storing current user value i.e, username if necessary\n   */\n  currentUserValue; \n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token; \n    console.log(\"token got\");\n    /**\n     * using function decode to get payload of JWT token\n     * \n     */\n    const payload = this.decode(token); \n    console.log(\"payload got\");\n    /**\n     * converting expiry time from unix timestamp to date time\n     */\n    const expiresAt = moment.unix(payload.exp); \n    console.log(\"expiry got\");\n    console.log(authResult.token); \n    /**\n     * storing token and expiry details\n     */\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n  /**\n   * @return extracting token\n   */\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n  \n  /**\n   * @param token JWT TOKEN\n   */\n  private decode(token: string) {\n    try {\n        /**\n         * breaking JWT into 3 components and parsing\n         */\n        return JSON.parse(atob(token.split(\".\")[1])); \n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n  /**\n   * to call on rendering any page \n   */\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {  \n      /**\n       * sending a refresh request to backend server if loggedIn\n       */\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)), \n        shareReplay(),\n      ).subscribe();\n    }\n  }\n  /**\n   * @return Returns expiry time of the token\n   */\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt); \n  }\n  /**\n   * sending post to get-token url\n   * @param data Login object\n   * @return Sets data of get-token result via setSession\n   */\n  login(data: Login)\n  { console.log(\"1\");\n    \n    return this.http.post(LOGIN_URL,data)  \n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response); \n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n  \n  /**\n   * @return Returns if user is logged in\n   */\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration()); \n  }\n  \n  /**\n   * @return Returns if user is logged out\n   */\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor { \n  /** \n   * HttpInterceptor to add authentication requests to outgoing requests\n   * \n   * @return Returns request with authourization request\n   **/\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    /**\n     * token value is stored here\n     */\n    const token = localStorage.getItem('token');\n    if (token) {\n      /**\n       * add authorization header \"Authorization:JWT token\"\n       */\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token)) \n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /**\n   * Authgaurd to block unauthenticated page access\n  **/\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      /**\n       * check login status and refresh\n       */\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      /**\n       * for unauthenticated request redirect to login\n       */\n      this.logout.logout(); \n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/login.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    username: string;\n    password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, idService: UserwhoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        idService\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:77\n                \n            \n\n\n            \n                \n                    This function performs the logic\nIf form is invalid stop\nCheck for invalid login and if success then call idService\nIf the login was successful after matching the data then redirect to the course page\nAlso before moving onto the home page the function also sets the is_professor variable in the local storage which will be used\nElse window alert that login was unsuccessful\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        variable to account for server/website loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        stores input data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        check if user submitted the data\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:60\n                                \n                            \n                    \n                        \n                                function to return form controls\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {UserwhoService} from '../services/userwho.service';\nimport { User } from '../_models';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    /**\n     * stores input data\n     */\n    loginForm: FormGroup;\n    /**\n     * variable to account for server/website loading\n     */\n    loading = false;\n    /**\n     * check if user submitted the data\n     */\n    submitted = false;\n    returnUrl: string;\n    \n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private idService:UserwhoService,\n        )\n    {\n        // redirect to home if already logged in\n        if (localStorage.getItem('token')!=null && localStorage.getItem('token')!=\"undefined\") {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit()\n    {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n\n    /**\n     * function to return form controls\n     */\n    get f(){\n        return this.loginForm.controls;\n    }\n\n    /**\n     * This function performs the logic\n     * \n     * If form is invalid stop\n     * \n     * Check for invalid login and if success then call idService\n     * \n     * If the login was successful after matching the data then redirect to the course page\n     * \n     * Also before moving onto the home page the function also sets the is_professor variable in the local storage which will be used\n     * \n     * Else window alert that login was unsuccessful\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.loginForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    const tok=localStorage.getItem('token');\n                    if(tok==null||tok=='undefined'){\n                        this.loading=false;\n                        window.alert('invalid login');\n                        this.router.navigate(['login']);\n                    }\n                    else{\n                        this.idService.IDENTITY().pipe(first())\n                        .subscribe(\n                            data=>{console.log(data);\n                            if(data['is_professor']==true){\n                                localStorage.setItem('is_professor','true');\n                            }\n                            else{\n                                localStorage.setItem('is_professor','false');\n                            }\n                            this.router.navigate([this.returnUrl]);\n                        });\n                    }\n                    \n                },\n                error => {\n                    this.loading = false;\n                });\n    }\n\n}\n\n    \n\n    \n        \n\n\n    \n         Login\n    \n    \n        \n            \n                \n\n                    \n                    \n                        Username is required\n                    \n                \n                \n                    \n                    \n                        Password is required\n                    \n                \n                \n                    \n                        \n                        Login\n                        \n                    \n                    Don't have an account? Sign Up Here\n                \n            \n        \n        \n    Username\n    \n\n    Password\n    \n        \n    Login\n    \n       Remember me\n    \n  -->\n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n    padding-bottom: 20%;\n}\n\n.card-body {\n    margin-top: 50px;\n    padding-top: 50px;\n}\n\n.space-it {\n    margin-top: 30px;\n    padding-top: 30%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n}\n\n.login {\n    margin-right: 20px;\n}\n\n.button {\n    text-align: center;\n}\n\n.form-control{\n    font-size: medium;\n}\n\n.login_button{\n    background-color: slateblue;\n    font-size: 15px;\n    border-radius: 10px;\n      \n}\n\n.required{\n    font-size: large;\n    margin-left: 50px;\n    color: chartreuse;\n}\n\n\n.dont-have{\n    background-color:red;\n    padding-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Login                                                                                                            Username is required                                                                                                                    Password is required                                                                                                                        Login                                                                Don\\'t have an account? Sign Up Here                                                Username        Password                Login           Remember me      -->    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/logout/logout.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logout/logout.component.ts:20\n                \n            \n\n\n            \n                \n                    This functions clears the local storage and moves out\nThen it takes to the login page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n//import { LogoutService } from '../services/logout.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    //private logout: LogoutService,\n    private router:Router,\n  ) { }\n/**\n * This functions clears the local storage and moves out\n * \n * Then it takes to the login page\n */\n  ngOnInit(): void {\n    //this.logout.logout()\n    window.localStorage.clear();\n    this.router.navigate(['/login']);\n  \n  }\n\n}\n\n    \n\n    \n        logout works!\n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logout.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logout.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logout.service.ts:23\n                \n            \n\n\n            \n                \n                    This function just clears local storage and logs out\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {BASE_URL} from './base';\nconst LOGOUT_URL = BASE_URL+'/api/auth/logout/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n  /**\n   * This function just clears local storage and logs out\n   */\n  logout() {\n    /*\n    localStorage.removeItem('token');\n    localStorage.removeItem('expires_at');*/\n    localStorage.clear();\n    //console.log(\"hi\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        by\n                                \n                                \n                                        course\n                                \n                                \n                                        from_username\n                                \n                                \n                                        id\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        message\n                                \n                                \n                                        prior\n                                \n                                \n                                        read_by\n                                \n                                \n                                        sent\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        by\n                                    \n                                \n                                \n                                    \n                                        by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from_username\n                                    \n                                \n                                \n                                    \n                                        from_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prior\n                                    \n                                \n                                \n                                    \n                                        prior:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read_by\n                                    \n                                \n                                \n                                    \n                                        read_by:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    It stores who all read the message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sent\n                                    \n                                \n                                \n                                    \n                                        sent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    it stores the type who should receive,it can be student or TA\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    id:number;\n    sent:string;\n    message:string;\n    /**\n     * it stores the type who should receive,it can be student or TA\n     */\n    to:string;\n    course:number;\n    by:number;\n    prior:boolean;\n    /**\n     * It stores who all read the message\n     */\n    read_by:Array;\n    from_username:string;\n    is_professor:boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageSent.html":{"url":"interfaces/MessageSent.html","title":"interface - MessageSent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageSent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message_sent.ts\n        \n\n            \n                Description\n            \n            \n                this interface is for message content which contains the message text and the message priority \nwhich is either high or low\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message_priority\n                                \n                                \n                                        message_text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message_priority\n                                    \n                                \n                                \n                                    \n                                        message_priority:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message_text\n                                    \n                                \n                                \n                                    \n                                        message_text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MessageSent {\n    message_text:string;\n    message_priority:boolean;\n   \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                GET_MESSAGES\n                            \n                            \n                                READ_MESSAGE\n                            \n                            \n                                SEND_MESSAGE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GET_MESSAGES\n                        \n                        \n                    \n                \n            \n            \n                \nGET_MESSAGES(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:28\n                \n            \n\n\n            \n                \n                    Sends a get request to URL to get the messages\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Represents the course id for which the messages are to be obtained\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Array Object of Messages\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            READ_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nREAD_MESSAGE(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:61\n                \n            \n\n\n            \n                \n                    This service sends a GET request to URL to get the list of users who read a particular message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Array of User Objects who read the message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SEND_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nSEND_MESSAGE(id: number, message: MessageSent, to: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:39\n                \n            \n\n\n            \n                \n                    Send Message service makes a post request to URL passing a message object and also whom to send\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Id\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                MessageSent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be sent\n\n                                    \n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Which stores whom to send(Either only to TA or both)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Post Request \n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Message} from '../_models/message';\nimport {ReadBy} from '../_models/read_by';\nimport {MessageSent} from '../_models/message_sent';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  /**\n   * Sends a get request to URL to get the messages\n   * \n   * @param id Represents the course id for which the messages are to be obtained\n   * \n   * @return Array Object of Messages\n   */\n  GET_MESSAGES(id:number):Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n  /**\n   * Send Message service makes a post request to URL passing a message object and also whom to send\n   * @param id Course Id\n   * @param message Message to be sent\n   * @param to Which stores whom to send(Either only to TA or both)\n   * @return Post Request \n   */\n  SEND_MESSAGE(id:number,message:MessageSent,to:string): Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    var data={};\n    data['to']=to;\n    data['message']=message['message_text'];\n    window.alert(message['message_text']);\n    data['prior']=message['message_priority'];\n\n    /*if(data['prior']==\"true\")\n      data['prior']=true;\n    else\n      data['prior']=false;*/\n\n   // window.alert(data['prior']);\n    console.log(data);\n    return this.http.post(URL,data,httpOptions);\n  }\n  /**\n   * This service sends a GET request to URL to get the list of users who read a particular message\n   * @param id Message Id\n   * @return Array of User Objects who read the message\n   */\n  READ_MESSAGE(id:number)\n  {\n    const URL=BASE_URL+'/api'+'/readby/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadBy.html":{"url":"interfaces/ReadBy.html","title":"interface - ReadBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/read_by.ts\n        \n\n            \n                Description\n            \n            \n                interface which represents the username of people who read a particular message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ReadBy{\n    username:String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadComponent.html":{"url":"components/ReadComponent.html","title":"component - ReadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/read/read.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-read\n            \n\n            \n                styleUrls\n                ./read.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./read.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message_id\n                            \n                            \n                                read_list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, activatedRoute: ActivatedRoute, messageservice: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/read/read.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageservice\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/read/read.component.ts:28\n                \n            \n\n\n            \n                \n                    First the message id is extracted from the path using activatedRoute\nThen message service is called to get the set of users who read the messsage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/read/read.component.ts:15\n                            \n                        \n\n                \n                    \n                        contains the particular message id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/read/read.component.ts:19\n                            \n                        \n\n                \n                    \n                        Contains the set of people who read the message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {MessageService} from '../services/message.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {BASE_URL} from  '../services/base';\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.scss']\n})\nexport class ReadComponent implements OnInit {\n  /**\n   * contains the particular message id\n   */\n  message_id:any;\n  /**\n   * Contains the set of people who read the message\n   */\n  read_list:any;\n  constructor(private http:HttpClient,\n    private activatedRoute:ActivatedRoute,\n    private messageservice:MessageService,) { }\n/**\n * First the message id is extracted from the path using activatedRoute\n * \n * Then message service is called to get the set of users who read the messsage\n */\n  ngOnInit(): void {\n    this.message_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.messageservice.READ_MESSAGE(this.message_id).subscribe(data=>{this.read_list=data;});\n    //console.log(\"hai\");\n    //console.log(this.read_list);\n    //this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data;});\n  }\n\n}\n\n    \n\n    \n        People who read the message:\n\n    \n        {{reader.username}}       \n    \n    \n\n\n    \n\n    \n                \n                    ./read.component.scss\n                \n                .card{\n    width: 40%;\n    margin-left: 5%;\n}\n\n.h1{\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'People who read the message:            {{reader.username}}               '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth_code_form\n                            \n                            \n                                auth_code_status\n                            \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                                \n                                    f1\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:89\n                \n            \n\n\n            \n                \n                    This function performs the logic when the user submits \nFirst checks if the field values are invalid if yes stops\nThen it checks for the authentication code status\nIt verifies with the regular expression and if matches proceeds by calling the register service\nIf everything is successful it takes back to login page else window alert message    \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n                \n                    \n                        to check if the authentication code matches with the form needed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        variable to account for loading time and for frontend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n                \n                    \n                        Registration form to input the fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:34\n                            \n                        \n\n                \n                    \n                        variable to account if submitted or not\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:72\n                                \n                            \n                    \n                        \n                                to return controls for fields for registration form\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f1\n                    \n                \n\n                \n                    \n                        getf1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:77\n                                \n                            \n                    \n                        \n                                to return controls for auth form \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\n/**\n * This expression is a regular expression representing student code\n * So students only with this matching will be allowed,else wont be\n */\nconst student_expression=/[1-2]\\d[A-Z0-9]\\d{6}/;\n/**\n * This is the authentication code regular expression for professors\n */\nconst professor_expression=/P[A-Z]{2,3}\\d{3}/;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\n\nexport class RegisterComponent implements OnInit {\n    /**\n     * Registration form to input the fields\n     */\n    registerForm: FormGroup;\n    /**\n     * variable to account for loading time and for frontend\n     */\n    loading = false;\n    /**\n     * variable to account if submitted or not\n     */\n    submitted = false;\n    /**\n     * to check if the authentication code matches with the form needed\n     */\n    auth_code_status=false;\n    auth_code_form:FormGroup;\n    \n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        /*private authenticationService: AuthenticationService,\n        private alertService: AlertService*/\n    ) { \n        // redirect to home if already logged in\n        /*if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }*/\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            email: ['',Validators.required,],\n            \n            is_professor:[false,Validators.required],\n        });\n        this.auth_code_form=this.formBuilder.group({\n            auth_code: ['',Validators.required],\n        })\n    }\n\n    // convenience getter for easy access to form fields\n    /**\n     * to return controls for fields for registration form\n     */\n    get f() { return this.registerForm.controls; }\n\n    /**\n     * to return controls for auth form \n     */\n    get f1() {return this.auth_code_form.controls;}\n\n    /**\n     * This function performs the logic when the user submits \n     * \n     * First checks if the field values are invalid if yes stops\n     * \n     * Then it checks for the authentication code status\n     * \n     * It verifies with the regular expression and if matches proceeds by calling the register service\n     * \n     * If everything is successful it takes back to login page else window alert message    */\n    onSubmit() {\n        this.submitted = true;\n      //console.log(this.submitted);\n        \n        if (this.registerForm.invalid || this.auth_code_form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        var s=this.f1.auth_code.value;\n        \n        if (s!=null && s!=\"undefined\")\n        {\n            if(student_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                \n            }\n            else if(professor_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                this.registerForm.patchValue({is_professor:true});\n            }\n            else\n            {\n                this.auth_code_status=false;\n            }\n        }\n        else\n        {\n            this.auth_code_status=false;\n        }\n        if(!this.auth_code_status)\n        {\n            window.alert(\"incorrect authentication code on first place\");\n            this.loading=false;\n            window.alert(\"registration unsuccessful\");\n            return;\n        }\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {window.alert(\"registered successfully\");\n                         this.router.navigate(['/login']);\n                },\n                error => {\n                    window.alert(\"registration unsuccessful\");\n                    this.loading = false;\n                });\n          //console.log(this.registerForm.value);\n    }\n}\n\n    \n\n    \n        \n\n\n    Register\n    \n        \n\n            \n                Username:\n                \n                \n                    Username is required\n                \n            \n            \n                Email:\n                \n                \n                    Email is required\n                \n            \n            \n                Password:\n                \n                \n                    Password is required\n                    Password must be at least 6 characters\n                \n            \n        \n           \n\n        \n            \n                Authentication Code:\n                \n                \n                    Authentication Code is required\n                \n            \n        \n\n        \n            \n                \n                 Register\n            \n            \n            \n                Cancel\n            \n            Already have an account? Login Here\n        \n    \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5%;\n}\n\n.card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card-body {\n    margin-top: 2%;\n    padding-top: 5%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.al{\n    font-size: medium;\n}\n\n.required{\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Register                                        Username:                                                    Username is required                                                        Email:                                                    Email is required                                                        Password:                                                    Password is required                    Password must be at least 6 characters                                                                                   Authentication Code:                                                    Authentication Code is required                                                                                         Register                                                    Cancel                        Already have an account? Login Here            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-bar/top-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-bar\n            \n\n            \n                styleUrls\n                ./top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interval\n                            \n                            \n                                logged_in\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_logIN\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check_logIN\n                        \n                        \n                    \n                \n            \n            \n                \ncheck_logIN()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:26\n                \n            \n\n\n            \n                \n                    This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : setInterval(()=>{this.check_logIN();},500)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logged_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:14\n                            \n                        \n\n                \n                    \n                        this variable checks the status whether the user is logged in or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { NONE_TYPE } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n  /**\n   * this variable checks the status whether the user is logged in or not\n   */\n  logged_in:boolean;\n  interval=setInterval(()=>{this.check_logIN();},500);\n  constructor()\n  { \n  }\n\n  ngOnInit(): void {\n    this.check_logIN();\n  }\n  /**\n   * This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n   */\n  check_logIN(){\n    if((localStorage.getItem('token')==null)||(localStorage.getItem('token')=='undefined')){\n      this.logged_in=false;\n    }\n    else{\n      this.logged_in=true;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    Our Team -->\n    \n      \n    \n\n    \n        \n            \n                Our Team \n            \n        \n        \n            \n                Dashboard\n            \n        \n        \n            \n                \n                    Logout\n                \n            \n            \n                \n                    \n                        Login\n                    \n                \n                \n                    \n                        Register\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./top-bar.component.scss\n                \n                a {\n    color: white;\n    font-size: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Our Team -->                                                      Our Team                                                         Dashboard                                                                            Logout                                                                                                    Login                                                                                                Register                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n            \n                Description\n            \n            \n                contains user details like username,password,email and if that person is a professor\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                is_professor\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    username: string;\n    password: string;\n    email: string;\n    is_professor: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMy.html":{"url":"interfaces/UserMy.html","title":"interface - UserMy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-my.ts\n        \n\n            \n                Description\n            \n            \n                interface to represent the current user loggen in\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    contains the list of courses the person is associated.He/She can be \neither a Professor or TA or a student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    holds whether the person is a professor or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user id that is stored in the database\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\n/**\n * interface to represent the current user loggen in\n */\nexport interface UserMy {\n    /**\n     * user id that is stored in the database\n     */\n    user: number;\n    /**\n     * holds whether the person is a professor or not\n     */\n    is_professor: boolean;\n    token: string;\n    /**\n     * contains the list of courses the person is associated.He/She can be \n     * either a Professor or TA or a student\n     */\n    courses: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMyList.html":{"url":"interfaces/UserMyList.html","title":"interface - UserMyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/list_of_student.ts\n        \n\n            \n                Description\n            \n            \n                this interface is for the list of students registered in a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\n/**\n * this interface is for the list of students registered in a course\n */\nexport interface UserMyList {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    username:String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserReal.html":{"url":"interfaces/UserReal.html","title":"interface - UserReal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserReal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-real.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        last_name\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserReal {\n    id: number;\n    username: string;\n    password: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete_students\n                            \n                            \n                                get_students\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_students\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_students(id: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:51\n                \n            \n\n\n            \n                \n                    This service removes a user from the course by making a POST request\nNote:U cant remove the professor via this service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Id\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of a User\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get_students\n                        \n                        \n                    \n                \n            \n            \n                \nget_students(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:38\n                \n            \n\n\n            \n                \n                    This fetches the list of Users registered for the course by making a GET request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Array of User Objects present in the course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n                    Makes a POST request to register a User Object in the dashboard\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User object to be registered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models';\nimport {UserMy} from '../_models/user-my';\nimport {UserMyList} from '../_models/list_of_student';\nimport {BASE_URL} from  './base';\nimport { ConstantPool } from '@angular/compiler';\nconst REGISTER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient)\n  {\n  }\n  /**\n   * Makes a POST request to register a User Object in the dashboard\n   * @param user User object to be registered\n   */\n  register(user: User): Observable\n  {\n    return this.http.post(REGISTER_URL, user, httpOptions);\n  }\n  /**\n   * This fetches the list of Users registered for the course by making a GET request\n   * \n   * @param id Course Id\n   * \n   * @return Array of User Objects present in the course\n   */\n  get_students(id:number):Observable\n  { \n    var url=BASE_URL+'/api/usercourse/'+id.toString()+'/';\n    return this.http.get(url,httpOptions);\n  }\n  /**\n   * This service removes a user from the course by making a POST request\n   * \n   * Note:U cant remove the professor via this service\n   * \n   * @param id Course Id\n   * @param username Username of a User\n   */\n  delete_students(id:number,username:string)\n  {\n    var url=BASE_URL+'/api/usercourse/'+id.toString()+'/';\n    var data={};\n    data['username']=username;\n    console.log(\"hello bro\");\n    return this.http.post(url,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserToken.html":{"url":"interfaces/UserToken.html","title":"interface - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        token_form\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_form\n                                    \n                                \n                                \n                                    \n                                        token_form:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface UserToken {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    token_form:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course_id\n                            \n                            \n                                is_professor\n                            \n                            \n                                list_of_students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete_student\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, activatedRoute: ActivatedRoute, userservice: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userservice\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_student\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_student(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the username of the person to be removed\nThis function calls the userservice to delete the student of a particular username \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:43\n                \n            \n\n\n            \n                \n                    First the course id is extracted using activatedRoute from the path\nThen userService is called to get the list_of_students \nNote here the professor cannot remove himself from the course via the UI\nThis function also sets the is_professor variable by looking into the local storage to give permission to remove students/TA's\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list_of_students\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:22\n                            \n                        \n\n                \n                    \n                        Represents the list of users registered in the course including the professor\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport {BASE_URL} from  '../services/base';\nimport {UserService} from '../services/user.service';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\n\nexport class UsersComponent implements OnInit {\n  /**\n   * Represents the list of users registered in the course including the professor\n   * \n   */\nlist_of_students:any;\n\ncourse_id:any;\n\nis_professor:boolean;\n  constructor(private http:HttpClient,\n    private activatedRoute:ActivatedRoute,\n    private userservice:UserService,\n    ) { \n    \n  }\n/**\n * First the course id is extracted using activatedRoute from the path\n * \n * Then userService is called to get the list_of_students \n * \n * Note here the professor cannot remove himself from the course via the UI\n * \n * This function also sets the is_professor variable by looking into the local storage to give permission to remove students/TA's\n * \n */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data;});\n    \n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n\n  }\n/**\n * \n * @param username This represents the username of the person to be removed\n * This function calls the userservice to delete the student of a particular username \n */\n  delete_student(username:string)\n  {\n    this.userservice.delete_students(this.course_id,username).subscribe(data=>{location.reload()});\n    \n  }\n\n\n}\n\n    \n\n    \n        Professor\n\n \n    \n        \n            {{student.username}}\n        \n        \n    \n\n\nStudents and TA's\n \n    \n        \n            {{student.username}}\n        \n        \n            \n                Remove the student\n            \n        \n    \n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                .list{\n    margin-bottom: 3%;\n    margin-right:80%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Professor                         {{student.username}}                    Students and TA\\'s                         {{student.username}}                                            Remove the student                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserwhoService.html":{"url":"injectables/UserwhoService.html","title":"injectable - UserwhoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserwhoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/userwho.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                IDENTITY\n                            \n                            \n                                STATUS\n                            \n                            \n                                WHO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/userwho.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IDENTITY\n                        \n                        \n                    \n                \n            \n            \n                \nIDENTITY()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            STATUS\n                        \n                        \n                    \n                \n            \n            \n                \nSTATUS(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            WHO\n                        \n                        \n                    \n                \n            \n            \n                \nWHO()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {UserReal} from '../_models/user-real';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst USER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserwhoService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n  /**\n   * \n   */\n  WHO(){\n    const USE_URL = BASE_URL+'/api/courses/';\n    return this.http.get(USE_URL, httpOptions);\n  }\n  /**\n   * \n   * @param id \n   */\n  STATUS(id:number){\n    const USE_URL=BASE_URL+'/api/user/'+id.toString()+'/abc/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n  /**\n   * \n   */\n  IDENTITY(){\n    const USE_URL = BASE_URL + '/api/usermy/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course-status.ts\n            \n            interface\n            CourseStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course.ts\n            \n            interface\n            Course\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/list_of_student.ts\n            \n            interface\n            UserMyList\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/_models/login.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/message.ts\n            \n            interface\n            Message\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/_models/message_sent.ts\n            \n            interface\n            MessageSent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/read_by.ts\n            \n            interface\n            ReadBy\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/_models/user-my.ts\n            \n            interface\n            UserMy\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/_models/user-real.ts\n            \n            interface\n            UserReal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_models/user-token.ts\n            \n            interface\n            UserToken\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/add-course/add-course.component.ts\n            \n            component\n            AddCourseComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/course-home/course-home.component.ts\n            \n            component\n            CourseHomeComponent\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/read/read.component.ts\n            \n            component\n            ReadComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            professor_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            student_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            injectable\n            AddCourseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            COURSE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            injectable\n            AddToCourseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            JWTPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            LOGIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            REFRESH_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/base.ts\n            \n            variable\n            BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            LOGOUT_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            REGISTER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            injectable\n            UserwhoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            USER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/top-bar/top-bar.component.ts\n            \n            component\n            TopBarComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.12\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : 9.1.12\n        \n            @angular/compiler : 9.1.12\n        \n            @angular/core : 9.1.12\n        \n            @angular/forms : 9.1.12\n        \n            @angular/localize : 9.1.12\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : 9.1.12\n        \n            @angular/platform-browser-dynamic : 9.1.12\n        \n            @angular/router : 9.1.12\n        \n            @ng-bootstrap/ng-bootstrap : ^6.2.0\n        \n            @types/jasmine : 3.5.14\n        \n            @types/jasminewd2 : 2.0.8\n        \n            @types/jwt-decode : ^2.2.1\n        \n            @types/node : 12.12.67\n        \n            bootstrap : ^4.5.3\n        \n            cors : 2.8.5\n        \n            jquery : ^3.5.1\n        \n            jwt-decode : ^3.1.2\n        \n            jwt-token : ^1.0.9\n        \n            moment : ^2.29.1\n        \n            ngx-bootstrap : ^6.1.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : 6.5.5\n        \n            tslib : 1.14.1\n        \n            zone.js : 0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nReadComponent\n\nReadComponent\n\nAppModule -->\n\nReadComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_URL   (src/.../base.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            COURSE_URL   (src/.../add-course.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            httpOptions   (src/.../add-to-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../add-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../userwho.service.ts)\n                        \n                        \n                            httpOptions   (src/.../logout.service.ts)\n                        \n                        \n                            httpOptions   (src/.../message.service.ts)\n                        \n                        \n                            httpOptions   (src/.../users.component.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            LOGIN_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            LOGOUT_URL   (src/.../logout.service.ts)\n                        \n                        \n                            professor_expression   (src/.../register.component.ts)\n                        \n                        \n                            REFRESH_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            REGISTER_URL   (src/.../user.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            student_expression   (src/.../register.component.ts)\n                        \n                        \n                            USER_URL   (src/.../userwho.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/base.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://back-dashboard.herokuapp.com'\n                        \n                    \n\n                \n                    \n                        Contains the base url which is common to all request url\nSo this is used as prefix and various requests are sent by adding appropriate suffix\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COURSE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/courses/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-to-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/userwho.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/logout.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGOUT_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/logout/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/message.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/users/users.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REGISTER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/get-token/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REFRESH_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/refresh-token/'\n                        \n                    \n\n\n            \n        \n\n    src/app/register/register.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professor_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /P[A-Z]{2,3}\\d{3}/\n                        \n                    \n\n                \n                    \n                        This is the authentication code regular expression for professors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[1-2]\\d[A-Z0-9]\\d{6}/\n                        \n                    \n\n                \n                    \n                        This expression is a regular expression representing student code\nSo students only with this matching will be allowed,else wont be\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
